/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 15:52:50 GMT 2024
 */

package org.subsonic.restapi;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.subsonic.restapi.Error;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Error_ESTest extends Error_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Error error0 = new Error();
      error0.setMessage("");
      assertEquals("", error0.getMessage());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Error error0 = new Error();
      error0.message = null;
      error0.message = "org.subsonic.restapi.Error";
      String string0 = error0.getMessage();
      assertEquals("org.subsonic.restapi.Error", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Error error0 = new Error();
      error0.message = null;
      error0.message = "org.subsonic.restapi.Error";
      error0.message = "org.subsonic.restapi.Error";
      error0.message = "";
      String string0 = error0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Error error0 = new Error();
      error0.code = 896;
      int int0 = error0.getCode();
      assertEquals(896, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Error error0 = new Error();
      error0.setCode((-1530));
      int int0 = error0.getCode();
      assertEquals((-1530), int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Error error0 = new Error();
      int int0 = error0.getCode();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Error error0 = new Error();
      String string0 = error0.getMessage();
      assertNull(string0);
  }
}
