/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 11 00:12:54 GMT 2024
 */

package org.subsonic.restapi;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.subsonic.restapi.NewestPodcasts;
import org.subsonic.restapi.PodcastEpisode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NewestPodcasts_ESTest extends NewestPodcasts_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NewestPodcasts newestPodcasts0 = new NewestPodcasts();
      LinkedList<PodcastEpisode> linkedList0 = new LinkedList<PodcastEpisode>();
      newestPodcasts0.episode = (List<PodcastEpisode>) linkedList0;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode();
      linkedList0.add(podcastEpisode0);
      List<PodcastEpisode> list0 = newestPodcasts0.getEpisode();
      assertTrue(list0.contains(podcastEpisode0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NewestPodcasts newestPodcasts0 = new NewestPodcasts();
      newestPodcasts0.getEpisode();
      List<PodcastEpisode> list0 = newestPodcasts0.getEpisode();
      assertEquals(0, list0.size());
  }
}
