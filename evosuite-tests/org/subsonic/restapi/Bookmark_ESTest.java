/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 11 00:10:46 GMT 2024
 */

package org.subsonic.restapi;

import org.junit.Test;
import static org.junit.Assert.*;
import javax.xml.datatype.XMLGregorianCalendar;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.subsonic.restapi.Bookmark;
import org.subsonic.restapi.Child;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Bookmark_ESTest extends Bookmark_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Bookmark bookmark0 = new Bookmark();
      bookmark0.setUsername("org.subsonic.restapi.Bookmark");
      String string0 = bookmark0.getUsername();
      assertEquals("org.subsonic.restapi.Bookmark", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Bookmark bookmark0 = new Bookmark();
      bookmark0.setUsername("");
      String string0 = bookmark0.getUsername();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Bookmark bookmark0 = new Bookmark();
      bookmark0.position = 1068L;
      long long0 = bookmark0.getPosition();
      assertEquals(1068L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Bookmark bookmark0 = new Bookmark();
      Child child0 = new Child();
      child0.setIsDir(true);
      bookmark0.setEntry(child0);
      Child child1 = bookmark0.getEntry();
      assertNull(child1.getAverageRating());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Bookmark bookmark0 = new Bookmark();
      Child child0 = new Child();
      bookmark0.entry = child0;
      Child child1 = bookmark0.getEntry();
      assertNull(child1.getGenre());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Bookmark bookmark0 = new Bookmark();
      bookmark0.comment = "o%m|%k{gGym";
      String string0 = bookmark0.getComment();
      assertEquals("o%m|%k{gGym", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Bookmark bookmark0 = new Bookmark();
      bookmark0.setComment("");
      String string0 = bookmark0.getComment();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Bookmark bookmark0 = new Bookmark();
      long long0 = bookmark0.getPosition();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Bookmark bookmark0 = new Bookmark();
      String string0 = bookmark0.getComment();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Bookmark bookmark0 = new Bookmark();
      String string0 = bookmark0.getUsername();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Bookmark bookmark0 = new Bookmark();
      bookmark0.setChanged((XMLGregorianCalendar) null);
      assertNull(bookmark0.getComment());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Bookmark bookmark0 = new Bookmark();
      bookmark0.setPosition((-489L));
      long long0 = bookmark0.getPosition();
      assertEquals((-489L), long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Bookmark bookmark0 = new Bookmark();
      XMLGregorianCalendar xMLGregorianCalendar0 = bookmark0.getChanged();
      assertNull(xMLGregorianCalendar0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Bookmark bookmark0 = new Bookmark();
      XMLGregorianCalendar xMLGregorianCalendar0 = bookmark0.getCreated();
      assertNull(xMLGregorianCalendar0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Bookmark bookmark0 = new Bookmark();
      Child child0 = bookmark0.getEntry();
      assertNull(child0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Bookmark bookmark0 = new Bookmark();
      bookmark0.setCreated((XMLGregorianCalendar) null);
      assertNull(bookmark0.getComment());
  }
}
