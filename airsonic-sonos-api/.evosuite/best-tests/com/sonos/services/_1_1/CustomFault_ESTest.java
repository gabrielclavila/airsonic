/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 14:28:36 GMT 2024
 */

package com.sonos.services._1_1;

import org.junit.Test;
import static org.junit.Assert.*;
import com.sonos.services._1_1.CustomFault;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CustomFault_ESTest extends CustomFault_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CustomFault customFault0 = new CustomFault();
      com.sonos.services._1.CustomFault customFault1 = customFault0.getFaultInfo();
      assertNull(customFault1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CustomFault customFault0 = new CustomFault("");
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      com.sonos.services._1.CustomFault customFault0 = new com.sonos.services._1.CustomFault();
      CustomFault customFault1 = new CustomFault("", customFault0);
      com.sonos.services._1.CustomFault customFault2 = customFault1.getFaultInfo();
      assertSame(customFault2, customFault0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      com.sonos.services._1.CustomFault customFault0 = new com.sonos.services._1.CustomFault();
      CustomFault customFault1 = new CustomFault("", customFault0);
      MockThrowable mockThrowable0 = new MockThrowable("", customFault1);
      CustomFault customFault2 = new CustomFault("X{w;}0i_]:$h:9", customFault0, mockThrowable0);
      assertFalse(customFault2.equals((Object)customFault1));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      com.sonos.services._1.CustomFault customFault0 = new com.sonos.services._1.CustomFault();
      CustomFault customFault1 = new CustomFault("", customFault0);
      CustomFault customFault2 = new CustomFault("", customFault1);
      assertFalse(customFault2.equals((Object)customFault1));
  }
}
