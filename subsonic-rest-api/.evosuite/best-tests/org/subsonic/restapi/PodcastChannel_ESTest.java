/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 15:22:46 GMT 2024
 */

package org.subsonic.restapi;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.subsonic.restapi.PodcastChannel;
import org.subsonic.restapi.PodcastEpisode;
import org.subsonic.restapi.PodcastStatus;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PodcastChannel_ESTest extends PodcastChannel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.setCoverArt("");
      assertEquals("", podcastChannel0.getCoverArt());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.setUrl("");
      assertNull(podcastChannel0.getErrorMessage());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.url = "L-<beY*_}Hfk";
      String string0 = podcastChannel0.getUrl();
      assertEquals("L-<beY*_}Hfk", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.url = "";
      String string0 = podcastChannel0.getUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.setTitle("MUSIC");
      String string0 = podcastChannel0.getTitle();
      assertEquals("MUSIC", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.setTitle("");
      String string0 = podcastChannel0.getTitle();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.originalImageUrl = "P/a&}e";
      String string0 = podcastChannel0.getOriginalImageUrl();
      assertEquals("P/a&}e", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.setOriginalImageUrl("");
      String string0 = podcastChannel0.getOriginalImageUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.setId("PODCAST");
      String string0 = podcastChannel0.getId();
      assertEquals("PODCAST", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.id = "";
      String string0 = podcastChannel0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.errorMessage = "-,-|}`+(ml?W&<bj q";
      String string0 = podcastChannel0.getErrorMessage();
      assertEquals("-,-|}`+(ml?W&<bj q", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.setErrorMessage("");
      String string0 = podcastChannel0.getErrorMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      LinkedList<PodcastEpisode> linkedList0 = new LinkedList<PodcastEpisode>();
      podcastChannel0.episode = (List<PodcastEpisode>) linkedList0;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode();
      linkedList0.add(podcastEpisode0);
      List<PodcastEpisode> list0 = podcastChannel0.getEpisode();
      assertTrue(list0.contains(podcastEpisode0));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.setDescription("nYh88~}");
      String string0 = podcastChannel0.getDescription();
      assertEquals("nYh88~}", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.setDescription("");
      String string0 = podcastChannel0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.coverArt = "'<`k+Chdq+iR";
      String string0 = podcastChannel0.getCoverArt();
      assertEquals("'<`k+Chdq+iR", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.coverArt = "";
      String string0 = podcastChannel0.getCoverArt();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      List<PodcastEpisode> list0 = podcastChannel0.getEpisode();
      List<PodcastEpisode> list1 = podcastChannel0.getEpisode();
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      String string0 = podcastChannel0.getOriginalImageUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      String string0 = podcastChannel0.getErrorMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      PodcastStatus podcastStatus0 = PodcastStatus.COMPLETED;
      podcastChannel0.setStatus(podcastStatus0);
      PodcastStatus podcastStatus1 = podcastChannel0.getStatus();
      assertEquals(PodcastStatus.COMPLETED, podcastStatus1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      String string0 = podcastChannel0.getCoverArt();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      String string0 = podcastChannel0.getTitle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      String string0 = podcastChannel0.getUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.getStatus();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      String string0 = podcastChannel0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      String string0 = podcastChannel0.getId();
      assertNull(string0);
  }
}
