/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 21:02:07 GMT 2024
 */

package org.airsonic.player.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import org.airsonic.player.domain.AlbumNotes;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AlbumNotes_ESTest extends AlbumNotes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AlbumNotes albumNotes0 = new AlbumNotes((String) null, (String) null, (String) null, (String) null, (String) null, (String) null);
      String string0 = albumNotes0.getSmallImageUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AlbumNotes albumNotes0 = new AlbumNotes((String) null, (String) null, "FsN", "FsN", (String) null, (String) null);
      String string0 = albumNotes0.getSmallImageUrl();
      assertEquals("FsN", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AlbumNotes albumNotes0 = new AlbumNotes((String) null, (String) null, (String) null, (String) null, (String) null, (String) null);
      String string0 = albumNotes0.getNotes();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AlbumNotes albumNotes0 = new AlbumNotes("9,</dF?`s&X!)T0", "9,</dF?`s&X!)T0", "", "", "9,</dF?`s&X!)T0", "H+R");
      String string0 = albumNotes0.getNotes();
      assertEquals("9,</dF?`s&X!)T0", albumNotes0.getMusicBrainzId());
      assertEquals("", albumNotes0.getSmallImageUrl());
      assertEquals("H+R", albumNotes0.getLargeImageUrl());
      assertEquals("", albumNotes0.getLastFmUrl());
      assertEquals("9,</dF?`s&X!)T0", string0);
      assertEquals("9,</dF?`s&X!)T0", albumNotes0.getMediumImageUrl());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AlbumNotes albumNotes0 = new AlbumNotes((String) null, (String) null, (String) null, (String) null, (String) null, (String) null);
      String string0 = albumNotes0.getMusicBrainzId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AlbumNotes albumNotes0 = new AlbumNotes("9,</dF?`s&X!)T0", "9,</dF?`s&X!)T0", "", "", "9,</dF?`s&X!)T0", "H+R");
      String string0 = albumNotes0.getMusicBrainzId();
      assertEquals("H+R", albumNotes0.getLargeImageUrl());
      assertEquals("9,</dF?`s&X!)T0", string0);
      assertEquals("", albumNotes0.getLastFmUrl());
      assertEquals("", albumNotes0.getSmallImageUrl());
      assertEquals("9,</dF?`s&X!)T0", albumNotes0.getNotes());
      assertEquals("9,</dF?`s&X!)T0", albumNotes0.getMediumImageUrl());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AlbumNotes albumNotes0 = new AlbumNotes((String) null, (String) null, (String) null, (String) null, (String) null, (String) null);
      String string0 = albumNotes0.getMediumImageUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AlbumNotes albumNotes0 = new AlbumNotes("xRqc~~", "", "3OO/F!", "", "", "");
      String string0 = albumNotes0.getMediumImageUrl();
      assertEquals("", albumNotes0.getMusicBrainzId());
      assertEquals("", string0);
      assertEquals("", albumNotes0.getSmallImageUrl());
      assertEquals("", albumNotes0.getLargeImageUrl());
      assertEquals("xRqc~~", albumNotes0.getNotes());
      assertEquals("3OO/F!", albumNotes0.getLastFmUrl());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AlbumNotes albumNotes0 = new AlbumNotes((String) null, (String) null, (String) null, (String) null, (String) null, (String) null);
      String string0 = albumNotes0.getLastFmUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AlbumNotes albumNotes0 = new AlbumNotes("9,</dF?`s&X!)T0", "9,</dF?`s&X!)T0", "", "", "9,</dF?`s&X!)T0", "H+R");
      String string0 = albumNotes0.getLastFmUrl();
      assertEquals("", string0);
      assertEquals("", albumNotes0.getSmallImageUrl());
      assertEquals("H+R", albumNotes0.getLargeImageUrl());
      assertEquals("9,</dF?`s&X!)T0", albumNotes0.getMusicBrainzId());
      assertEquals("9,</dF?`s&X!)T0", albumNotes0.getNotes());
      assertEquals("9,</dF?`s&X!)T0", albumNotes0.getMediumImageUrl());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AlbumNotes albumNotes0 = new AlbumNotes((String) null, (String) null, "FsN", "FsN", (String) null, (String) null);
      String string0 = albumNotes0.getLargeImageUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AlbumNotes albumNotes0 = new AlbumNotes("9,</dF?`s&X!)T0", "9,</dF?`s&X!)T0", "", "", "9,</dF?`s&X!)T0", "H+R");
      String string0 = albumNotes0.getLargeImageUrl();
      assertEquals("", albumNotes0.getLastFmUrl());
      assertEquals("9,</dF?`s&X!)T0", albumNotes0.getMediumImageUrl());
      assertEquals("", albumNotes0.getSmallImageUrl());
      assertEquals("9,</dF?`s&X!)T0", albumNotes0.getMusicBrainzId());
      assertEquals("H+R", string0);
      assertEquals("9,</dF?`s&X!)T0", albumNotes0.getNotes());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AlbumNotes albumNotes0 = new AlbumNotes("", "", ":M", "", ":M", "");
      String string0 = albumNotes0.getLargeImageUrl();
      assertEquals(":M", albumNotes0.getLastFmUrl());
      assertEquals("", albumNotes0.getMusicBrainzId());
      assertEquals(":M", albumNotes0.getMediumImageUrl());
      assertEquals("", string0);
      assertEquals("", albumNotes0.getSmallImageUrl());
      assertEquals("", albumNotes0.getNotes());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AlbumNotes albumNotes0 = new AlbumNotes("", "", ":M", "", ":M", "");
      String string0 = albumNotes0.getSmallImageUrl();
      assertEquals("", albumNotes0.getMusicBrainzId());
      assertEquals(":M", albumNotes0.getMediumImageUrl());
      assertEquals("", string0);
      assertEquals("", albumNotes0.getLargeImageUrl());
      assertEquals("", albumNotes0.getNotes());
      assertEquals(":M", albumNotes0.getLastFmUrl());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AlbumNotes albumNotes0 = new AlbumNotes("", "", ":M", "", ":M", "");
      String string0 = albumNotes0.getLastFmUrl();
      assertEquals(":M", albumNotes0.getMediumImageUrl());
      assertEquals(":M", string0);
      assertEquals("", albumNotes0.getNotes());
      assertEquals("", albumNotes0.getMusicBrainzId());
      assertEquals("", albumNotes0.getLargeImageUrl());
      assertEquals("", albumNotes0.getSmallImageUrl());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AlbumNotes albumNotes0 = new AlbumNotes("", "", ":M", "", ":M", "");
      String string0 = albumNotes0.getNotes();
      assertEquals("", albumNotes0.getLargeImageUrl());
      assertEquals("", string0);
      assertEquals("", albumNotes0.getSmallImageUrl());
      assertEquals(":M", albumNotes0.getLastFmUrl());
      assertEquals(":M", albumNotes0.getMediumImageUrl());
      assertEquals("", albumNotes0.getMusicBrainzId());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AlbumNotes albumNotes0 = new AlbumNotes("", "", ":M", "", ":M", "");
      String string0 = albumNotes0.getMusicBrainzId();
      assertEquals("", albumNotes0.getNotes());
      assertEquals(":M", albumNotes0.getMediumImageUrl());
      assertEquals("", string0);
      assertEquals("", albumNotes0.getSmallImageUrl());
      assertEquals("", albumNotes0.getLargeImageUrl());
      assertEquals(":M", albumNotes0.getLastFmUrl());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AlbumNotes albumNotes0 = new AlbumNotes("", "", "", "e", "e", "e");
      String string0 = albumNotes0.getMediumImageUrl();
      assertEquals("e", string0);
      assertEquals("e", albumNotes0.getLargeImageUrl());
      assertEquals("", albumNotes0.getNotes());
      assertEquals("", albumNotes0.getMusicBrainzId());
      assertEquals("e", albumNotes0.getSmallImageUrl());
      assertEquals("", albumNotes0.getLastFmUrl());
  }
}
