/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 11 00:01:29 GMT 2024
 */

package org.subsonic.restapi;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.subsonic.restapi.ArtistInfoBase;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArtistInfoBase_ESTest extends ArtistInfoBase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArtistInfoBase artistInfoBase0 = new ArtistInfoBase();
      artistInfoBase0.setMusicBrainzId("");
      assertNull(artistInfoBase0.getBiography());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArtistInfoBase artistInfoBase0 = new ArtistInfoBase();
      artistInfoBase0.setSmallImageUrl("`");
      String string0 = artistInfoBase0.getSmallImageUrl();
      assertEquals("`", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArtistInfoBase artistInfoBase0 = new ArtistInfoBase();
      artistInfoBase0.smallImageUrl = "";
      String string0 = artistInfoBase0.getSmallImageUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArtistInfoBase artistInfoBase0 = new ArtistInfoBase();
      artistInfoBase0.musicBrainzId = "'u[T+kN";
      String string0 = artistInfoBase0.getMusicBrainzId();
      assertEquals("'u[T+kN", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArtistInfoBase artistInfoBase0 = new ArtistInfoBase();
      artistInfoBase0.musicBrainzId = "";
      String string0 = artistInfoBase0.getMusicBrainzId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArtistInfoBase artistInfoBase0 = new ArtistInfoBase();
      artistInfoBase0.mediumImageUrl = "";
      String string0 = artistInfoBase0.getMediumImageUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArtistInfoBase artistInfoBase0 = new ArtistInfoBase();
      artistInfoBase0.lastFmUrl = "org.subsonic.restapi.ArtistInfo2";
      String string0 = artistInfoBase0.getLastFmUrl();
      assertEquals("org.subsonic.restapi.ArtistInfo2", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArtistInfoBase artistInfoBase0 = new ArtistInfoBase();
      artistInfoBase0.setLastFmUrl("");
      String string0 = artistInfoBase0.getLastFmUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArtistInfoBase artistInfoBase0 = new ArtistInfoBase();
      artistInfoBase0.setLargeImageUrl("");
      String string0 = artistInfoBase0.getLargeImageUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArtistInfoBase artistInfoBase0 = new ArtistInfoBase();
      artistInfoBase0.setBiography("w=Nf?<?O'NCOW");
      String string0 = artistInfoBase0.getBiography();
      assertEquals("w=Nf?<?O'NCOW", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArtistInfoBase artistInfoBase0 = new ArtistInfoBase();
      artistInfoBase0.setBiography("");
      String string0 = artistInfoBase0.getBiography();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArtistInfoBase artistInfoBase0 = new ArtistInfoBase();
      String string0 = artistInfoBase0.getMediumImageUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArtistInfoBase artistInfoBase0 = new ArtistInfoBase();
      artistInfoBase0.setLargeImageUrl("65a%>#Exbfd]/");
      String string0 = artistInfoBase0.getLargeImageUrl();
      assertEquals("65a%>#Exbfd]/", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArtistInfoBase artistInfoBase0 = new ArtistInfoBase();
      String string0 = artistInfoBase0.getMusicBrainzId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArtistInfoBase artistInfoBase0 = new ArtistInfoBase();
      String string0 = artistInfoBase0.getLargeImageUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArtistInfoBase artistInfoBase0 = new ArtistInfoBase();
      String string0 = artistInfoBase0.getLastFmUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ArtistInfoBase artistInfoBase0 = new ArtistInfoBase();
      artistInfoBase0.setMediumImageUrl("d0:am?:6?hKYhwNEW");
      String string0 = artistInfoBase0.getMediumImageUrl();
      assertEquals("d0:am?:6?hKYhwNEW", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArtistInfoBase artistInfoBase0 = new ArtistInfoBase();
      String string0 = artistInfoBase0.getSmallImageUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ArtistInfoBase artistInfoBase0 = new ArtistInfoBase();
      String string0 = artistInfoBase0.getBiography();
      assertNull(string0);
  }
}
