/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 20:34:54 GMT 2024
 */

package org.airsonic.player.service;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.Instant;
import java.util.Date;
import org.airsonic.player.domain.MediaFile;
import org.airsonic.player.service.AudioScrobblerService;
import org.airsonic.player.service.SettingsService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AudioScrobblerService_ESTest extends AudioScrobblerService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AudioScrobblerService audioScrobblerService0 = new AudioScrobblerService();
      MockDate mockDate0 = new MockDate(5, 5, 5, 5, 5);
      MediaFile mediaFile0 = new MediaFile();
      // Undeclared exception!
      try { 
        audioScrobblerService0.register(mediaFile0, "yGCskvI)(_1K:", false, mockDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.airsonic.player.service.AudioScrobblerService", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AudioScrobblerService audioScrobblerService0 = new AudioScrobblerService();
      MediaFile.MediaType mediaFile_MediaType0 = MediaFile.MediaType.VIDEO;
      Integer integer0 = new Integer(5);
      MockDate mockDate0 = new MockDate(5, 5, 5, 5, 5);
      MediaFile mediaFile0 = new MediaFile(5, "yGCskvI)(_1K:", "yGCskvI)(_1K:", mediaFile_MediaType0, "yGCskvI)(_1K:", "yGCskvI)(_1K:", "yGCskvI)(_1K:", "yGCskvI)(_1K:", "yGCskvI)(_1K:", integer0, integer0, integer0, "yGCskvI)(_1K:", integer0, false, integer0, (Long) null, integer0, integer0, "yGCskvI)(_1K:", "yGCskvI)(_1K:", 5, mockDate0, "yGCskvI)(_1K:", mockDate0, mockDate0, mockDate0, mockDate0, false, 5, "yGCskvI)(_1K:", "yGCskvI)(_1K:");
      audioScrobblerService0.register(mediaFile0, "yGCskvI)(_1K:", false, mockDate0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AudioScrobblerService audioScrobblerService0 = new AudioScrobblerService();
      Instant instant0 = MockInstant.ofEpochSecond((-490L), (-490L));
      Date date0 = Date.from(instant0);
      audioScrobblerService0.register((MediaFile) null, "org.airsonic.player.service.AudioScrobblerService", true, date0);
      assertEquals("Wed Dec 31 23:51:49 GMT 1969", date0.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AudioScrobblerService audioScrobblerService0 = new AudioScrobblerService();
      audioScrobblerService0.setSettingsService((SettingsService) null);
  }
}
