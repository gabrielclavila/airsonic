/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 14:28:08 GMT 2024
 */

package com.sonos.services._1;

import org.junit.Test;
import static org.junit.Assert.*;
import com.sonos.services._1.PositionInformation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PositionInformation_ESTest extends PositionInformation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PositionInformation positionInformation0 = new PositionInformation();
      positionInformation0.offsetMillis = 0;
      positionInformation0.offsetMillis = 1;
      int int0 = positionInformation0.getOffsetMillis();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PositionInformation positionInformation0 = new PositionInformation();
      positionInformation0.setOffsetMillis((-386));
      int int0 = positionInformation0.getOffsetMillis();
      assertEquals((-386), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PositionInformation positionInformation0 = new PositionInformation();
      positionInformation0.setIndex(2361);
      int int0 = positionInformation0.getIndex();
      assertEquals(2361, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PositionInformation positionInformation0 = new PositionInformation();
      positionInformation0.id = "--*$qm>@8:=K?=1ni;\"";
      String string0 = positionInformation0.getId();
      assertEquals("--*$qm>@8:=K?=1ni;\"", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PositionInformation positionInformation0 = new PositionInformation();
      positionInformation0.setId("");
      String string0 = positionInformation0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PositionInformation positionInformation0 = new PositionInformation();
      String string0 = positionInformation0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PositionInformation positionInformation0 = new PositionInformation();
      int int0 = positionInformation0.getOffsetMillis();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PositionInformation positionInformation0 = new PositionInformation();
      int int0 = positionInformation0.getIndex();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PositionInformation positionInformation0 = new PositionInformation();
      positionInformation0.setIndex((-1));
      int int0 = positionInformation0.getIndex();
      assertEquals((-1), int0);
  }
}
