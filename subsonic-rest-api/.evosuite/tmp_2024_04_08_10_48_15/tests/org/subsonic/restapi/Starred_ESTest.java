/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 14:57:21 GMT 2024
 */

package org.subsonic.restapi;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.subsonic.restapi.Artist;
import org.subsonic.restapi.Child;
import org.subsonic.restapi.Starred;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Starred_ESTest extends Starred_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Starred starred0 = new Starred();
      LinkedList<Child> linkedList0 = new LinkedList<Child>();
      starred0.song = (List<Child>) linkedList0;
      Child child0 = new Child();
      linkedList0.add(child0);
      List<Child> list0 = starred0.getSong();
      assertNotNull(list0);
      assertTrue(list0.contains(child0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Starred starred0 = new Starred();
      LinkedList<Artist> linkedList0 = new LinkedList<Artist>();
      Artist artist0 = new Artist();
      starred0.artist = (List<Artist>) linkedList0;
      linkedList0.add(artist0);
      List<Artist> list0 = starred0.getArtist();
      assertNotNull(list0);
      assertTrue(list0.contains(artist0));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Starred starred0 = new Starred();
      LinkedList<Child> linkedList0 = new LinkedList<Child>();
      Child child0 = new Child();
      linkedList0.add(child0);
      starred0.album = (List<Child>) linkedList0;
      List<Child> list0 = starred0.getAlbum();
      assertTrue(list0.contains(child0));
      assertNotNull(list0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Starred starred0 = new Starred();
      List<Child> list0 = starred0.getSong();
      List<Child> list1 = starred0.getSong();
      assertSame(list1, list0);
      assertNotNull(list1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Starred starred0 = new Starred();
      List<Child> list0 = starred0.getAlbum();
      List<Child> list1 = starred0.getAlbum();
      assertNotNull(list1);
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Starred starred0 = new Starred();
      List<Artist> list0 = starred0.getArtist();
      List<Artist> list1 = starred0.getArtist();
      assertSame(list1, list0);
      assertNotNull(list1);
  }
}
