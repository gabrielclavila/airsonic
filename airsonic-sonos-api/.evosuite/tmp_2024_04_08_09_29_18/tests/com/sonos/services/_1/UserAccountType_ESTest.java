/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 13:48:51 GMT 2024
 */

package com.sonos.services._1;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sonos.services._1.UserAccountType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UserAccountType_ESTest extends UserAccountType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UserAccountType userAccountType0 = UserAccountType.fromValue("free");
      assertEquals(UserAccountType.FREE, userAccountType0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UserAccountType[] userAccountTypeArray0 = UserAccountType.values();
      assertEquals(3, userAccountTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UserAccountType userAccountType0 = UserAccountType.valueOf("FREE");
      assertEquals(UserAccountType.FREE, userAccountType0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        UserAccountType.fromValue("{");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // {
         //
         verifyException("com.sonos.services._1.UserAccountType", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      UserAccountType userAccountType0 = UserAccountType.fromValue("trial");
      String string0 = userAccountType0.value();
      assertEquals("trial", string0);
  }
}
