/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 14:27:47 GMT 2024
 */

package com.sonos.services._1;

import org.junit.Test;
import static org.junit.Assert.*;
import com.sonos.services._1.LoginToken;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LoginToken_ESTest extends LoginToken_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LoginToken loginToken0 = new LoginToken();
      loginToken0.setToken("com.sonos.services._1.LoginToken");
      String string0 = loginToken0.getToken();
      assertEquals("com.sonos.services._1.LoginToken", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LoginToken loginToken0 = new LoginToken();
      loginToken0.token = "";
      String string0 = loginToken0.getToken();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LoginToken loginToken0 = new LoginToken();
      loginToken0.key = "~d)p?$MKtN";
      String string0 = loginToken0.getKey();
      assertEquals("~d)p?$MKtN", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LoginToken loginToken0 = new LoginToken();
      loginToken0.setKey("");
      String string0 = loginToken0.getKey();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LoginToken loginToken0 = new LoginToken();
      loginToken0.setHouseholdId("3paCRu/,ORE.G");
      String string0 = loginToken0.getHouseholdId();
      assertEquals("3paCRu/,ORE.G", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LoginToken loginToken0 = new LoginToken();
      loginToken0.setHouseholdId("");
      String string0 = loginToken0.getHouseholdId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LoginToken loginToken0 = new LoginToken();
      String string0 = loginToken0.getHouseholdId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LoginToken loginToken0 = new LoginToken();
      String string0 = loginToken0.getKey();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LoginToken loginToken0 = new LoginToken();
      String string0 = loginToken0.getToken();
      assertNull(string0);
  }
}
