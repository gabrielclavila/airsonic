/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 21:00:47 GMT 2024
 */

package org.airsonic.player.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import org.airsonic.player.domain.Transcoding;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Transcoding_ESTest extends Transcoding_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = new Integer(713);
      Transcoding transcoding0 = new Transcoding(integer0, "H]*a !", "H]*a !", "video/avi", "video/x-matroska", "H]*a !", "H]*a !", true);
      boolean boolean0 = transcoding0.isDefaultActive();
      assertEquals("video/avi", transcoding0.getTargetFormat());
      assertEquals("H]*a !", transcoding0.getSourceFormats());
      assertEquals("H]*a !", transcoding0.getStep3());
      assertEquals("H]*a !", transcoding0.getStep2());
      assertEquals("H]*a !", transcoding0.getName());
      assertEquals("video/x-matroska", transcoding0.getStep1());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Transcoding transcoding0 = new Transcoding((Integer) null, "", (String) null, (String) null, "", "", "", false);
      String string0 = transcoding0.getTargetFormat();
      assertFalse(transcoding0.isDefaultActive());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer((-1103));
      Transcoding transcoding0 = new Transcoding(integer0, "zp~,vgX&(fP\"_", "zp~,vgX&(fP\"_", ":b", "", "7%9XLg2`2. (", ":b", false);
      assertEquals(":b", transcoding0.getTargetFormat());
      
      transcoding0.setTargetFormat("");
      transcoding0.getTargetFormat();
      assertEquals("zp~,vgX&(fP\"_", transcoding0.getSourceFormats());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer((-1803));
      Transcoding transcoding0 = new Transcoding(integer0, "", "6y8Sf0", "6y8Sf0", "E~", "", "E~", true);
      String string0 = transcoding0.getStep3();
      assertEquals("", transcoding0.getName());
      assertEquals("E~", string0);
      assertEquals("", transcoding0.getStep2());
      assertEquals("E~", transcoding0.getStep1());
      assertEquals("6y8Sf0", transcoding0.getSourceFormats());
      assertTrue(transcoding0.isDefaultActive());
      assertEquals("6y8Sf0", transcoding0.getTargetFormat());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Transcoding transcoding0 = new Transcoding(integer0, (String) null, "", "", "", (String) null, "", true);
      String string0 = transcoding0.getStep3();
      assertTrue(transcoding0.isDefaultActive());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(1334);
      Transcoding transcoding0 = new Transcoding(integer0, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, true);
      transcoding0.getStep2();
      assertTrue(transcoding0.isDefaultActive());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer((-2879));
      Transcoding transcoding0 = new Transcoding(integer0, "", "KJ`}t7,LUf`rsgge9T[", "", "KJ`}t7,LUf`rsgge9T[", "", "KJ`}t7,LUf`rsgge9T[", true);
      String string0 = transcoding0.getStep2();
      assertEquals("", transcoding0.getName());
      assertEquals("KJ`}t7,LUf`rsgge9T[", transcoding0.getStep3());
      assertTrue(transcoding0.isDefaultActive());
      assertEquals("", transcoding0.getTargetFormat());
      assertEquals("", string0);
      assertEquals("KJ`}t7,LUf`rsgge9T[", transcoding0.getSourceFormats());
      assertEquals("KJ`}t7,LUf`rsgge9T[", transcoding0.getStep1());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = Integer.valueOf((-1180));
      Transcoding transcoding0 = new Transcoding(integer0, (String) null, (String) null, (String) null, (String) null, "J<LRpf&~!:", (String) null, true);
      String string0 = transcoding0.getStep1();
      assertNull(string0);
      assertTrue(transcoding0.isDefaultActive());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(25);
      Transcoding transcoding0 = new Transcoding(integer0, "0", (String) null, "video/ogg", "=42sNV3L\"", (String) null, "video/ogg", true);
      assertEquals("=42sNV3L\"", transcoding0.getStep1());
      
      transcoding0.setStep1("");
      transcoding0.getStep1();
      assertEquals("video/ogg", transcoding0.getStep3());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = Integer.valueOf((-1180));
      Transcoding transcoding0 = new Transcoding(integer0, (String) null, (String) null, (String) null, (String) null, "J<LRpf&~!:", (String) null, true);
      String[] stringArray0 = transcoding0.getSourceFormatsAsArray();
      assertEquals(0, stringArray0.length);
      assertTrue(transcoding0.isDefaultActive());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Transcoding transcoding0 = new Transcoding(integer0, "", " q<o'[", "", " q<o'[", "mp3", "{eA}vn0L_ca7oKGnk-", true);
      String string0 = transcoding0.getSourceFormats();
      assertEquals("{eA}vn0L_ca7oKGnk-", transcoding0.getStep3());
      assertEquals("mp3", transcoding0.getStep2());
      assertEquals("", transcoding0.getName());
      assertTrue(transcoding0.isDefaultActive());
      assertEquals("", transcoding0.getTargetFormat());
      assertEquals(" q<o'[", string0);
      assertEquals(" q<o'[", transcoding0.getStep1());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer((-1803));
      Transcoding transcoding0 = new Transcoding(integer0, "", "6y8Sf0", "6y8Sf0", "E~", "", "E~", true);
      assertEquals("6y8Sf0", transcoding0.getSourceFormats());
      
      transcoding0.setSourceFormats("");
      transcoding0.getSourceFormats();
      assertEquals("E~", transcoding0.getStep3());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Transcoding transcoding0 = new Transcoding(integer0, (String) null, (String) null, "rInm", "7\"K'!)t$", "", "", false);
      String string0 = transcoding0.getName();
      assertEquals("rInm", transcoding0.getTargetFormat());
      assertEquals("", transcoding0.getStep2());
      assertEquals("", transcoding0.getStep3());
      assertEquals("7\"K'!)t$", transcoding0.getStep1());
      assertFalse(transcoding0.isDefaultActive());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer((-1803));
      Transcoding transcoding0 = new Transcoding(integer0, "", "6y8Sf0", "6y8Sf0", "E~", "", "E~", true);
      String string0 = transcoding0.getName();
      assertEquals("", transcoding0.getStep2());
      assertEquals("6y8Sf0", transcoding0.getTargetFormat());
      assertEquals("6y8Sf0", transcoding0.getSourceFormats());
      assertTrue(transcoding0.isDefaultActive());
      assertEquals("E~", transcoding0.getStep1());
      assertEquals("", string0);
      assertEquals("E~", transcoding0.getStep3());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Transcoding transcoding0 = new Transcoding((Integer) null, "8(e#Kn", "org.airsonic.player.domain.Transcoding", "8(e#Kn", "org.airsonic.player.domain.Transcoding", "8(e#Kn", "kQS,$I'oyCAc+'w", false);
      transcoding0.getId();
      assertEquals("org.airsonic.player.domain.Transcoding", transcoding0.getStep1());
      assertEquals("8(e#Kn", transcoding0.getStep2());
      assertEquals("8(e#Kn", transcoding0.getTargetFormat());
      assertEquals("kQS,$I'oyCAc+'w", transcoding0.getStep3());
      assertFalse(transcoding0.isDefaultActive());
      assertEquals("org.airsonic.player.domain.Transcoding", transcoding0.getSourceFormats());
      assertEquals("8(e#Kn", transcoding0.getName());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Transcoding transcoding0 = new Transcoding(integer0, "", " q<o'[", "", " q<o'[", "mp3", "{eA}vn0L_ca7oKGnk-", true);
      transcoding0.getId();
      assertEquals("{eA}vn0L_ca7oKGnk-", transcoding0.getStep3());
      assertEquals("", transcoding0.getTargetFormat());
      assertTrue(transcoding0.isDefaultActive());
      assertEquals("mp3", transcoding0.getStep2());
      assertEquals(" q<o'[", transcoding0.getSourceFormats());
      assertEquals(" q<o'[", transcoding0.getStep1());
      assertEquals("", transcoding0.getName());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Transcoding transcoding0 = new Transcoding(integer0, (String) null, (String) null, (String) null, "!6hxJ]'VQG}DvO", (String) null, (String) null, true);
      transcoding0.getId();
      assertTrue(transcoding0.isDefaultActive());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Integer integer0 = new Integer((-1044));
      Transcoding transcoding0 = new Transcoding(integer0, "U%", "U%", "U%", "U%", "U%", "U%", true);
      transcoding0.getId();
      assertTrue(transcoding0.isDefaultActive());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Integer integer0 = new Integer((-1044));
      Transcoding transcoding0 = new Transcoding(integer0, "U%", "U%", "U%", "U%", "U%", "U%", true);
      transcoding0.hashCode();
      assertTrue(transcoding0.isDefaultActive());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Transcoding transcoding0 = new Transcoding((Integer) null, "%", "%", "%", "%", "%", "%", true);
      transcoding0.hashCode();
      assertTrue(transcoding0.isDefaultActive());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Transcoding transcoding0 = new Transcoding((Integer) null, "%", "%", "%", "%", "%", "%", true);
      boolean boolean0 = transcoding0.equals("%");
      assertFalse(boolean0);
      assertTrue(transcoding0.isDefaultActive());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Integer integer0 = new Integer((-1187));
      Transcoding transcoding0 = new Transcoding(integer0, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, false);
      Transcoding transcoding1 = new Transcoding(integer0, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, false);
      boolean boolean0 = transcoding0.equals(transcoding1);
      assertFalse(transcoding1.isDefaultActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Integer integer0 = Integer.valueOf((-1180));
      Transcoding transcoding0 = new Transcoding(integer0, (String) null, (String) null, (String) null, (String) null, "J<LRpf&~!:", (String) null, true);
      boolean boolean0 = transcoding0.equals(transcoding0);
      assertTrue(transcoding0.isDefaultActive());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Transcoding transcoding0 = new Transcoding(integer0, "LMC<^ALiOVC6>KG[u", "org.airsonic.player.domain.Transcoding", "org.airsonic.player.domain.Transcoding", "LMC<^ALiOVC6>KG[u", (String) null, (String) null, true);
      boolean boolean0 = transcoding0.equals((Object) null);
      assertEquals("org.airsonic.player.domain.Transcoding", transcoding0.getTargetFormat());
      assertEquals("org.airsonic.player.domain.Transcoding", transcoding0.getSourceFormats());
      assertFalse(boolean0);
      assertEquals("LMC<^ALiOVC6>KG[u", transcoding0.getName());
      assertEquals("LMC<^ALiOVC6>KG[u", transcoding0.getStep1());
      assertTrue(transcoding0.isDefaultActive());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Transcoding transcoding0 = new Transcoding((Integer) null, "z-e7<vxWHOQ)N", "z-e7<vxWHOQ)N", "z-e7<vxWHOQ)N", "z-e7<vxWHOQ)N", "z-e7<vxWHOQ)N", "z-e7<vxWHOQ)N", false);
      transcoding0.getTargetFormat();
      assertFalse(transcoding0.isDefaultActive());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Integer integer0 = new Integer(1009);
      Transcoding transcoding0 = new Transcoding(integer0, "", "", "", "", "", "", false);
      boolean boolean0 = transcoding0.isDefaultActive();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Integer integer0 = Integer.valueOf((-1180));
      Transcoding transcoding0 = new Transcoding(integer0, (String) null, (String) null, (String) null, (String) null, "J<LRpf&~!:", (String) null, true);
      String string0 = transcoding0.getSourceFormats();
      assertNull(string0);
      assertTrue(transcoding0.isDefaultActive());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Integer integer0 = new Integer((-1044));
      Transcoding transcoding0 = new Transcoding(integer0, "U%", "U%", "U%", "U%", "U%", "U%", true);
      transcoding0.setStep2("U%");
      assertTrue(transcoding0.isDefaultActive());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Integer integer0 = new Integer((-1044));
      Transcoding transcoding0 = new Transcoding(integer0, "U%", "U%", "U%", "U%", "U%", "U%", true);
      transcoding0.getStep1();
      assertTrue(transcoding0.isDefaultActive());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Integer integer0 = new Integer((-1044));
      Transcoding transcoding0 = new Transcoding(integer0, "U%", "U%", "U%", "U%", "U%", "U%", true);
      transcoding0.getSourceFormatsAsArray();
      assertTrue(transcoding0.isDefaultActive());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Transcoding transcoding0 = new Transcoding((Integer) null, "%", "%", "%", "%", "%", "%", true);
      transcoding0.setId((Integer) null);
      assertTrue(transcoding0.isDefaultActive());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Integer integer0 = new Integer((-1044));
      Transcoding transcoding0 = new Transcoding(integer0, "U%", "U%", "U%", "U%", "U%", "U%", true);
      transcoding0.setDefaultActive(true);
      assertTrue(transcoding0.isDefaultActive());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Integer integer0 = Integer.valueOf((-1180));
      Transcoding transcoding0 = new Transcoding(integer0, (String) null, (String) null, (String) null, (String) null, "J<LRpf&~!:", (String) null, true);
      String string0 = transcoding0.getStep2();
      assertTrue(transcoding0.isDefaultActive());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Integer integer0 = new Integer((-1044));
      Transcoding transcoding0 = new Transcoding(integer0, "U%", "U%", "U%", "U%", "U%", "U%", true);
      transcoding0.getName();
      assertTrue(transcoding0.isDefaultActive());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Integer integer0 = new Integer((-1044));
      Transcoding transcoding0 = new Transcoding(integer0, "U%", "U%", "U%", "U%", "U%", "U%", true);
      transcoding0.setStep3("U%");
      assertTrue(transcoding0.isDefaultActive());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Integer integer0 = new Integer((-1187));
      Transcoding transcoding0 = new Transcoding(integer0, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, false);
      transcoding0.getStep3();
      assertFalse(transcoding0.isDefaultActive());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Integer integer0 = new Integer((-1044));
      Transcoding transcoding0 = new Transcoding(integer0, "U%", "U%", "U%", "U%", "U%", "U%", true);
      transcoding0.setName("U%");
      assertTrue(transcoding0.isDefaultActive());
  }
}
