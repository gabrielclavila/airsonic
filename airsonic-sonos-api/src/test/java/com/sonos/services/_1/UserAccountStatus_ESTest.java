/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 13:58:25 GMT 2024
 */

package com.sonos.services._1;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sonos.services._1.UserAccountStatus;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UserAccountStatus_ESTest extends UserAccountStatus_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UserAccountStatus userAccountStatus0 = UserAccountStatus.fromValue("expired");
      assertEquals(UserAccountStatus.EXPIRED, userAccountStatus0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UserAccountStatus[] userAccountStatusArray0 = UserAccountStatus.values();
      assertEquals(3, userAccountStatusArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UserAccountStatus userAccountStatus0 = UserAccountStatus.valueOf("ACTIVE");
      assertEquals("active", userAccountStatus0.value());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        UserAccountStatus.fromValue("adtive");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // adtive
         //
         verifyException("com.sonos.services._1.UserAccountStatus", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      UserAccountStatus userAccountStatus0 = UserAccountStatus.fromValue("restricted");
      String string0 = userAccountStatus0.value();
      assertEquals("restricted", string0);
  }
}
