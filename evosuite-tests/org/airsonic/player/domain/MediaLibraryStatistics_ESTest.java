/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 20:49:10 GMT 2024
 */

package org.airsonic.player.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Date;
import org.airsonic.player.domain.MediaLibraryStatistics;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MediaLibraryStatistics_ESTest extends MediaLibraryStatistics_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      mediaLibraryStatistics0.reset();
      Long long0 = mediaLibraryStatistics0.getTotalLengthInBytes();
      assertEquals(0, (int)mediaLibraryStatistics0.getArtistCount());
      assertEquals(0L, (long)long0);
      assertEquals(0, (int)mediaLibraryStatistics0.getSongCount());
      assertEquals(0, (int)mediaLibraryStatistics0.getAlbumCount());
      assertEquals(0L, (long)mediaLibraryStatistics0.getTotalDurationInSeconds());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics(mockDate0);
      mediaLibraryStatistics0.incrementTotalLengthInBytes(1899L);
      mediaLibraryStatistics0.getTotalLengthInBytes();
      assertEquals(1899L, (long)mediaLibraryStatistics0.getTotalLengthInBytes());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      mediaLibraryStatistics0.reset();
      mediaLibraryStatistics0.incrementTotalLengthInBytes((-1));
      mediaLibraryStatistics0.getTotalLengthInBytes();
      assertEquals((-1L), (long)mediaLibraryStatistics0.getTotalLengthInBytes());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics(mockDate0);
      Long long0 = mediaLibraryStatistics0.getTotalDurationInSeconds();
      assertEquals(0, (int)mediaLibraryStatistics0.getAlbumCount());
      assertEquals(0L, (long)long0);
      assertEquals(0L, (long)mediaLibraryStatistics0.getTotalLengthInBytes());
      assertEquals(0, (int)mediaLibraryStatistics0.getSongCount());
      assertEquals(0, (int)mediaLibraryStatistics0.getArtistCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      mediaLibraryStatistics0.reset();
      mediaLibraryStatistics0.incrementTotalDurationInSeconds(554L);
      mediaLibraryStatistics0.getTotalDurationInSeconds();
      assertEquals(554L, (long)mediaLibraryStatistics0.getTotalDurationInSeconds());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-16), (-16), 959);
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics(mockDate0);
      mediaLibraryStatistics0.incrementTotalDurationInSeconds((-16));
      mediaLibraryStatistics0.getTotalDurationInSeconds();
      assertEquals((-16L), (long)mediaLibraryStatistics0.getTotalDurationInSeconds());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      mediaLibraryStatistics0.reset();
      mediaLibraryStatistics0.incrementSongs((-2586));
      mediaLibraryStatistics0.getSongCount();
      assertEquals((-2586), (int)mediaLibraryStatistics0.getSongCount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics(mockDate0);
      Integer integer0 = mediaLibraryStatistics0.getSongCount();
      assertEquals(0, (int)mediaLibraryStatistics0.getArtistCount());
      assertEquals(0L, (long)mediaLibraryStatistics0.getTotalLengthInBytes());
      assertEquals(0, (int)mediaLibraryStatistics0.getAlbumCount());
      assertEquals(0L, (long)mediaLibraryStatistics0.getTotalDurationInSeconds());
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      mediaLibraryStatistics0.reset();
      mediaLibraryStatistics0.incrementSongs(1336);
      mediaLibraryStatistics0.getSongCount();
      assertEquals(1336, (int)mediaLibraryStatistics0.getSongCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      mediaLibraryStatistics0.reset();
      mediaLibraryStatistics0.incrementArtists((-2586));
      mediaLibraryStatistics0.getArtistCount();
      assertEquals((-2586), (int)mediaLibraryStatistics0.getArtistCount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3341), (-755), (-755), (-3341), (-755), (-1));
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics(mockDate0);
      Integer integer0 = mediaLibraryStatistics0.getArtistCount();
      assertEquals(0L, (long)mediaLibraryStatistics0.getTotalLengthInBytes());
      assertEquals(0, (int)integer0);
      assertEquals(0L, (long)mediaLibraryStatistics0.getTotalDurationInSeconds());
      assertEquals(0, (int)mediaLibraryStatistics0.getAlbumCount());
      assertEquals(0, (int)mediaLibraryStatistics0.getSongCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-1308), (-1308), 0, 670, (-1308));
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics(mockDate0);
      mediaLibraryStatistics0.incrementArtists(1404);
      mediaLibraryStatistics0.getArtistCount();
      assertEquals(1404, (int)mediaLibraryStatistics0.getArtistCount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      mediaLibraryStatistics0.reset();
      Integer integer0 = mediaLibraryStatistics0.getAlbumCount();
      assertEquals(0, (int)integer0);
      assertEquals(0L, (long)mediaLibraryStatistics0.getTotalLengthInBytes());
      assertEquals(0L, (long)mediaLibraryStatistics0.getTotalDurationInSeconds());
      assertEquals(0, (int)mediaLibraryStatistics0.getSongCount());
      assertEquals(0, (int)mediaLibraryStatistics0.getArtistCount());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-1838), (-1838), 0, 0, (-1838));
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics(mockDate0);
      mediaLibraryStatistics0.incrementAlbums(2329);
      mediaLibraryStatistics0.getAlbumCount();
      assertEquals(2329, (int)mediaLibraryStatistics0.getAlbumCount());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, 0, (-3909), 0, 0);
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics(mockDate0);
      mediaLibraryStatistics0.incrementAlbums((-3909));
      mediaLibraryStatistics0.getAlbumCount();
      assertEquals((-3909), (int)mediaLibraryStatistics0.getAlbumCount());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      MediaLibraryStatistics mediaLibraryStatistics1 = new MediaLibraryStatistics();
      boolean boolean0 = mediaLibraryStatistics0.equals(mediaLibraryStatistics1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      mediaLibraryStatistics0.reset();
      MockDate mockDate0 = new MockDate();
      mediaLibraryStatistics0.incrementTotalDurationInSeconds((-1882L));
      MediaLibraryStatistics mediaLibraryStatistics1 = new MediaLibraryStatistics(mockDate0);
      boolean boolean0 = mediaLibraryStatistics0.equals(mediaLibraryStatistics1);
      assertEquals((-1882L), (long)mediaLibraryStatistics0.getTotalDurationInSeconds());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3341), (-755), (-755), (-3341), (-755), (-1));
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics(mockDate0);
      mediaLibraryStatistics0.incrementTotalLengthInBytes(1L);
      MediaLibraryStatistics mediaLibraryStatistics1 = new MediaLibraryStatistics();
      mediaLibraryStatistics1.reset();
      boolean boolean0 = mediaLibraryStatistics0.equals(mediaLibraryStatistics1);
      assertEquals(1L, (long)mediaLibraryStatistics0.getTotalLengthInBytes());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      MockDate mockDate0 = new MockDate();
      MediaLibraryStatistics mediaLibraryStatistics1 = new MediaLibraryStatistics(mockDate0);
      mediaLibraryStatistics0.reset();
      mediaLibraryStatistics0.incrementAlbums((-1181));
      boolean boolean0 = mediaLibraryStatistics0.equals(mediaLibraryStatistics1);
      assertEquals((-1181), (int)mediaLibraryStatistics0.getAlbumCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      MockDate mockDate0 = new MockDate();
      MediaLibraryStatistics mediaLibraryStatistics1 = new MediaLibraryStatistics(mockDate0);
      mediaLibraryStatistics0.reset();
      boolean boolean0 = mediaLibraryStatistics0.equals(mediaLibraryStatistics1);
      assertEquals(0, (int)mediaLibraryStatistics1.getAlbumCount());
      assertEquals(0L, (long)mediaLibraryStatistics1.getTotalLengthInBytes());
      assertEquals(0, (int)mediaLibraryStatistics1.getSongCount());
      assertEquals(0L, (long)mediaLibraryStatistics1.getTotalDurationInSeconds());
      assertFalse(boolean0);
      assertEquals(0, (int)mediaLibraryStatistics1.getArtistCount());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      MockDate mockDate0 = new MockDate();
      boolean boolean0 = mediaLibraryStatistics0.equals(mockDate0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3341), (-755), (-755), (-3341), (-755), (-1));
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics(mockDate0);
      boolean boolean0 = mediaLibraryStatistics0.equals((Object) null);
      assertEquals(0L, (long)mediaLibraryStatistics0.getTotalDurationInSeconds());
      assertEquals(0L, (long)mediaLibraryStatistics0.getTotalLengthInBytes());
      assertEquals(0, (int)mediaLibraryStatistics0.getSongCount());
      assertEquals(0, (int)mediaLibraryStatistics0.getArtistCount());
      assertFalse(boolean0);
      assertEquals(0, (int)mediaLibraryStatistics0.getAlbumCount());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      boolean boolean0 = mediaLibraryStatistics0.equals(mediaLibraryStatistics0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      MockDate mockDate0 = new MockDate();
      MediaLibraryStatistics mediaLibraryStatistics1 = new MediaLibraryStatistics(mockDate0);
      boolean boolean0 = mediaLibraryStatistics0.equals(mediaLibraryStatistics1);
      assertEquals(0L, (long)mediaLibraryStatistics1.getTotalDurationInSeconds());
      assertEquals(0, (int)mediaLibraryStatistics1.getArtistCount());
      assertEquals(0, (int)mediaLibraryStatistics1.getAlbumCount());
      assertFalse(boolean0);
      assertEquals(0, (int)mediaLibraryStatistics1.getSongCount());
      assertEquals(0L, (long)mediaLibraryStatistics1.getTotalLengthInBytes());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = null;
      try {
        mediaLibraryStatistics0 = new MediaLibraryStatistics((Date) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.airsonic.player.domain.MediaLibraryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics(mockDate0);
      mediaLibraryStatistics0.getScanDate();
      assertEquals(0, (int)mediaLibraryStatistics0.getAlbumCount());
      assertEquals(0, (int)mediaLibraryStatistics0.getArtistCount());
      assertEquals(0L, (long)mediaLibraryStatistics0.getTotalDurationInSeconds());
      assertEquals(0, (int)mediaLibraryStatistics0.getSongCount());
      assertEquals(0L, (long)mediaLibraryStatistics0.getTotalLengthInBytes());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      // Undeclared exception!
      try { 
        mediaLibraryStatistics0.incrementArtists(564);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.airsonic.player.domain.MediaLibraryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      Date date0 = mediaLibraryStatistics0.getScanDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      mediaLibraryStatistics0.hashCode();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      Long long0 = mediaLibraryStatistics0.getTotalLengthInBytes();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      Integer integer0 = mediaLibraryStatistics0.getSongCount();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      Integer integer0 = mediaLibraryStatistics0.getArtistCount();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      mediaLibraryStatistics0.reset();
      mediaLibraryStatistics0.incrementSongs((-1));
      MockDate mockDate0 = new MockDate(0, (-1), 3, (-1), 3, (-1));
      MediaLibraryStatistics mediaLibraryStatistics1 = new MediaLibraryStatistics(mockDate0);
      boolean boolean0 = mediaLibraryStatistics0.equals(mediaLibraryStatistics1);
      assertEquals((-1), (int)mediaLibraryStatistics0.getSongCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      Integer integer0 = mediaLibraryStatistics0.getAlbumCount();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      // Undeclared exception!
      try { 
        mediaLibraryStatistics0.incrementTotalLengthInBytes((-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.airsonic.player.domain.MediaLibraryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      // Undeclared exception!
      try { 
        mediaLibraryStatistics0.incrementAlbums(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.airsonic.player.domain.MediaLibraryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      // Undeclared exception!
      try { 
        mediaLibraryStatistics0.incrementTotalDurationInSeconds(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.airsonic.player.domain.MediaLibraryStatistics", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      Long long0 = mediaLibraryStatistics0.getTotalDurationInSeconds();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MediaLibraryStatistics mediaLibraryStatistics0 = new MediaLibraryStatistics();
      // Undeclared exception!
      try { 
        mediaLibraryStatistics0.incrementSongs((-1941));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.airsonic.player.domain.MediaLibraryStatistics", e);
      }
  }
}
