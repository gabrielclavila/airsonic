/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 15:05:22 GMT 2024
 */

package org.subsonic.restapi;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.subsonic.restapi.MediaType;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MediaType_ESTest extends MediaType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MediaType mediaType0 = MediaType.fromValue("music");
      assertEquals(MediaType.MUSIC, mediaType0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MediaType[] mediaTypeArray0 = MediaType.values();
      assertEquals(4, mediaTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MediaType mediaType0 = MediaType.valueOf("MUSIC");
      assertEquals(MediaType.MUSIC, mediaType0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MediaType mediaType0 = MediaType.fromValue("audiobook");
      assertEquals(MediaType.AUDIOBOOK, mediaType0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        MediaType.fromValue("viddo");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // viddo
         //
         verifyException("org.subsonic.restapi.MediaType", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MediaType mediaType0 = MediaType.MUSIC;
      String string0 = mediaType0.value();
      assertEquals("music", string0);
  }
}
