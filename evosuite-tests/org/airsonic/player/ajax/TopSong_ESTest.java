/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 20:27:46 GMT 2024
 */

package org.airsonic.player.ajax;

import org.junit.Test;
import static org.junit.Assert.*;
import org.airsonic.player.ajax.TopSong;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TopSong_ESTest extends TopSong_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TopSong topSong0 = new TopSong(1, "rz0", "rz0", (String) null, (String) null, false);
      boolean boolean0 = topSong0.isStarred();
      assertEquals(1, topSong0.getId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TopSong topSong0 = new TopSong((-2445), (String) null, (String) null, (String) null, (String) null, false);
      topSong0.getTitle();
      assertFalse(topSong0.isStarred());
      assertEquals((-2445), topSong0.getId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TopSong topSong0 = new TopSong(1, "rz0", "rz0", (String) null, (String) null, false);
      String string0 = topSong0.getTitle();
      assertFalse(topSong0.isStarred());
      assertEquals(1, topSong0.getId());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TopSong topSong0 = new TopSong(0, "", "", "", (String) null, false);
      int int0 = topSong0.getId();
      assertEquals(0, int0);
      assertFalse(topSong0.isStarred());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TopSong topSong0 = new TopSong(1, "rz0", "rz0", (String) null, (String) null, false);
      int int0 = topSong0.getId();
      assertEquals(1, int0);
      assertFalse(topSong0.isStarred());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TopSong topSong0 = new TopSong((-2445), (String) null, (String) null, (String) null, (String) null, false);
      topSong0.getDurationAsString();
      assertEquals((-2445), topSong0.getId());
      assertFalse(topSong0.isStarred());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TopSong topSong0 = new TopSong((-238), "H;Rr<BV.o", ",|_15(&", "8+pw(", "H;Rr<BV.o", true);
      String string0 = topSong0.getDurationAsString();
      assertEquals("H;Rr<BV.o", string0);
      assertEquals(",|_15(&", topSong0.getArtist());
      assertTrue(topSong0.isStarred());
      assertEquals("8+pw(", topSong0.getAlbum());
      assertEquals((-238), topSong0.getId());
      assertEquals("H;Rr<BV.o", topSong0.getTitle());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TopSong topSong0 = new TopSong((-2445), (String) null, (String) null, (String) null, (String) null, false);
      topSong0.getArtist();
      assertFalse(topSong0.isStarred());
      assertEquals((-2445), topSong0.getId());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TopSong topSong0 = new TopSong(1, "rz0", "rz0", (String) null, (String) null, false);
      String string0 = topSong0.getArtist();
      assertFalse(topSong0.isStarred());
      assertNotNull(string0);
      assertEquals(1, topSong0.getId());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TopSong topSong0 = new TopSong((-2445), (String) null, (String) null, (String) null, (String) null, false);
      topSong0.getAlbum();
      assertFalse(topSong0.isStarred());
      assertEquals((-2445), topSong0.getId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TopSong topSong0 = new TopSong((-238), "H;Rr<BV.o", ",|_15(&", "8+pw(", "H;Rr<BV.o", true);
      String string0 = topSong0.getAlbum();
      assertEquals("H;Rr<BV.o", topSong0.getDurationAsString());
      assertEquals((-238), topSong0.getId());
      assertEquals("8+pw(", string0);
      assertEquals(",|_15(&", topSong0.getArtist());
      assertTrue(topSong0.isStarred());
      assertEquals("H;Rr<BV.o", topSong0.getTitle());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TopSong topSong0 = new TopSong((-1), "", "", "", "", true);
      boolean boolean0 = topSong0.isStarred();
      assertEquals((-1), topSong0.getId());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TopSong topSong0 = new TopSong((-1), "", "", "", "", true);
      topSong0.getAlbum();
      assertTrue(topSong0.isStarred());
      assertEquals((-1), topSong0.getId());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TopSong topSong0 = new TopSong((-1), "", "", "", "", true);
      topSong0.getDurationAsString();
      assertEquals((-1), topSong0.getId());
      assertTrue(topSong0.isStarred());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TopSong topSong0 = new TopSong((-1), "", "", "", "", true);
      int int0 = topSong0.getId();
      assertTrue(topSong0.isStarred());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TopSong topSong0 = new TopSong((-1), "", "", "", "", true);
      topSong0.getArtist();
      assertEquals((-1), topSong0.getId());
      assertTrue(topSong0.isStarred());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TopSong topSong0 = new TopSong((-1), "", "", "", "", true);
      topSong0.getTitle();
      assertTrue(topSong0.isStarred());
      assertEquals((-1), topSong0.getId());
  }
}
