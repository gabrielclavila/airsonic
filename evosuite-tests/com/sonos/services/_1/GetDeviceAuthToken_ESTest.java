/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 12 01:06:09 GMT 2024
 */

package com.sonos.services._1;

import org.junit.Test;
import static org.junit.Assert.*;
import com.sonos.services._1.GetDeviceAuthToken;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GetDeviceAuthToken_ESTest extends GetDeviceAuthToken_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GetDeviceAuthToken getDeviceAuthToken0 = new GetDeviceAuthToken();
      getDeviceAuthToken0.setLinkDeviceId("^o6fZ=IhF");
      String string0 = getDeviceAuthToken0.getLinkDeviceId();
      assertEquals("^o6fZ=IhF", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GetDeviceAuthToken getDeviceAuthToken0 = new GetDeviceAuthToken();
      getDeviceAuthToken0.setLinkDeviceId("");
      String string0 = getDeviceAuthToken0.getLinkDeviceId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GetDeviceAuthToken getDeviceAuthToken0 = new GetDeviceAuthToken();
      getDeviceAuthToken0.linkCode = "";
      String string0 = getDeviceAuthToken0.getLinkCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GetDeviceAuthToken getDeviceAuthToken0 = new GetDeviceAuthToken();
      getDeviceAuthToken0.setHouseholdId("E");
      String string0 = getDeviceAuthToken0.getHouseholdId();
      assertEquals("E", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GetDeviceAuthToken getDeviceAuthToken0 = new GetDeviceAuthToken();
      getDeviceAuthToken0.householdId = "";
      String string0 = getDeviceAuthToken0.getHouseholdId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GetDeviceAuthToken getDeviceAuthToken0 = new GetDeviceAuthToken();
      getDeviceAuthToken0.callbackPath = "E";
      String string0 = getDeviceAuthToken0.getCallbackPath();
      assertEquals("E", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GetDeviceAuthToken getDeviceAuthToken0 = new GetDeviceAuthToken();
      getDeviceAuthToken0.setCallbackPath("");
      String string0 = getDeviceAuthToken0.getCallbackPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GetDeviceAuthToken getDeviceAuthToken0 = new GetDeviceAuthToken();
      getDeviceAuthToken0.setLinkCode("jdMXQ");
      String string0 = getDeviceAuthToken0.getLinkCode();
      assertEquals("jdMXQ", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GetDeviceAuthToken getDeviceAuthToken0 = new GetDeviceAuthToken();
      String string0 = getDeviceAuthToken0.getCallbackPath();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GetDeviceAuthToken getDeviceAuthToken0 = new GetDeviceAuthToken();
      String string0 = getDeviceAuthToken0.getHouseholdId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GetDeviceAuthToken getDeviceAuthToken0 = new GetDeviceAuthToken();
      String string0 = getDeviceAuthToken0.getLinkDeviceId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GetDeviceAuthToken getDeviceAuthToken0 = new GetDeviceAuthToken();
      String string0 = getDeviceAuthToken0.getLinkCode();
      assertNull(string0);
  }
}
