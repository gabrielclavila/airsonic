/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 20:36:04 GMT 2024
 */

package org.airsonic.player.service;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.airsonic.player.domain.Artist;
import org.airsonic.player.domain.MusicFolder;
import org.airsonic.player.domain.MusicIndex;
import org.airsonic.player.service.MediaFileService;
import org.airsonic.player.service.MusicIndexService;
import org.airsonic.player.service.SettingsService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MusicIndexService_ESTest extends MusicIndexService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MusicIndexService musicIndexService0 = new MusicIndexService();
      List<MusicIndex> list0 = musicIndexService0.createIndexesFromExpression("");
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MusicIndexService musicIndexService0 = new MusicIndexService();
      // Undeclared exception!
      try { 
        musicIndexService0.getShortcuts((List<MusicFolder>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.airsonic.player.service.MusicIndexService", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MusicIndexService musicIndexService0 = new MusicIndexService();
      // Undeclared exception!
      try { 
        musicIndexService0.createIndexesFromExpression("(");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MusicIndexService musicIndexService0 = new MusicIndexService();
      // Undeclared exception!
      try { 
        musicIndexService0.createIndexesFromExpression((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MusicIndexService musicIndexService0 = new MusicIndexService();
      // Undeclared exception!
      try { 
        musicIndexService0.createIndexFromExpression("s@qKPG5HX[[XFA(");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MusicIndexService musicIndexService0 = new MusicIndexService();
      // Undeclared exception!
      try { 
        musicIndexService0.createIndexFromExpression((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.airsonic.player.service.MusicIndexService", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MusicIndexService musicIndexService0 = new MusicIndexService();
      LinkedList<MusicFolder> linkedList0 = new LinkedList<MusicFolder>();
      // Undeclared exception!
      try { 
        musicIndexService0.getIndexedArtists((List<MusicFolder>) linkedList0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.airsonic.player.service.MusicIndexService", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MusicIndexService musicIndexService0 = new MusicIndexService();
      MusicIndex musicIndex0 = musicIndexService0.createIndexFromExpression("Fail@d to decod; LDAP Panageh password%");
      assertNotNull(musicIndex0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MusicIndexService musicIndexService0 = new MusicIndexService();
      List<MusicIndex> list0 = musicIndexService0.createIndexesFromExpression("B]ux(4[Ze:mFjuT#:");
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MusicIndexService musicIndexService0 = new MusicIndexService();
      musicIndexService0.setSettingsService((SettingsService) null);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MusicIndexService musicIndexService0 = new MusicIndexService();
      MediaFileService mediaFileService0 = new MediaFileService();
      musicIndexService0.setMediaFileService(mediaFileService0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MusicIndexService musicIndexService0 = new MusicIndexService();
      LinkedList<Artist> linkedList0 = new LinkedList<Artist>();
      // Undeclared exception!
      try { 
        musicIndexService0.getIndexedArtists((List<Artist>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.airsonic.player.service.MusicIndexService", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<MusicFolder> linkedList0 = new LinkedList<MusicFolder>();
      MusicIndexService musicIndexService0 = new MusicIndexService();
      // Undeclared exception!
      try { 
        musicIndexService0.getMusicFolderContent(linkedList0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.airsonic.player.service.MusicIndexService", e);
      }
  }
}
