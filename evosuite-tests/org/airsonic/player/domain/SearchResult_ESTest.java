/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 20:51:26 GMT 2024
 */

package org.airsonic.player.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.List;
import org.airsonic.player.domain.Album;
import org.airsonic.player.domain.Artist;
import org.airsonic.player.domain.MediaFile;
import org.airsonic.player.domain.SearchResult;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SearchResult_ESTest extends SearchResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SearchResult searchResult0 = new SearchResult();
      searchResult0.setTotalHits(1394);
      int int0 = searchResult0.getTotalHits();
      assertEquals(1394, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SearchResult searchResult0 = new SearchResult();
      searchResult0.setTotalHits((-36));
      int int0 = searchResult0.getTotalHits();
      assertEquals((-36), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SearchResult searchResult0 = new SearchResult();
      searchResult0.setOffset(183);
      int int0 = searchResult0.getOffset();
      assertEquals(183, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SearchResult searchResult0 = new SearchResult();
      searchResult0.setOffset((-1637));
      int int0 = searchResult0.getOffset();
      assertEquals((-1637), int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SearchResult searchResult0 = new SearchResult();
      List<MediaFile> list0 = searchResult0.getMediaFiles();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SearchResult searchResult0 = new SearchResult();
      List<Artist> list0 = searchResult0.getArtists();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SearchResult searchResult0 = new SearchResult();
      int int0 = searchResult0.getTotalHits();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SearchResult searchResult0 = new SearchResult();
      int int0 = searchResult0.getOffset();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SearchResult searchResult0 = new SearchResult();
      List<Album> list0 = searchResult0.getAlbums();
      assertEquals(0, list0.size());
  }
}
