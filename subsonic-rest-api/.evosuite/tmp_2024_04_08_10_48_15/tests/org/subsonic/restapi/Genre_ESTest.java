/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 15:54:19 GMT 2024
 */

package org.subsonic.restapi;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.subsonic.restapi.Genre;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Genre_ESTest extends Genre_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Genre genre0 = new Genre();
      genre0.setAlbumCount((-4523));
      assertEquals((-4523), genre0.getAlbumCount());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Genre genre0 = new Genre();
      genre0.songCount = 1;
      genre0.songCount = (-1);
      int int0 = genre0.getSongCount();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Genre genre0 = new Genre();
      genre0.content = "";
      String string0 = genre0.getContent();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Genre genre0 = new Genre();
      genre0.albumCount = (-462);
      genre0.albumCount = (-462);
      genre0.albumCount = 205;
      int int0 = genre0.getAlbumCount();
      assertEquals(205, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Genre genre0 = new Genre();
      genre0.albumCount = (-327);
      int int0 = genre0.getAlbumCount();
      assertEquals((-327), int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Genre genre0 = new Genre();
      genre0.setSongCount(1);
      int int0 = genre0.getSongCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Genre genre0 = new Genre();
      genre0.setContent("'<K");
      String string0 = genre0.getContent();
      assertEquals("'<K", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Genre genre0 = new Genre();
      int int0 = genre0.getAlbumCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Genre genre0 = new Genre();
      int int0 = genre0.getSongCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Genre genre0 = new Genre();
      String string0 = genre0.getContent();
      assertNull(string0);
  }
}
