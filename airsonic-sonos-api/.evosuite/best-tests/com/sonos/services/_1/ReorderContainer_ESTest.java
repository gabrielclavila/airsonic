/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 14:30:30 GMT 2024
 */

package com.sonos.services._1;

import org.junit.Test;
import static org.junit.Assert.*;
import com.sonos.services._1.ReorderContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReorderContainer_ESTest extends ReorderContainer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ReorderContainer reorderContainer0 = new ReorderContainer();
      reorderContainer0.setUpdateId("iqi^fSL$v-qU4B`H9F");
      assertEquals(0, reorderContainer0.getTo());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ReorderContainer reorderContainer0 = new ReorderContainer();
      reorderContainer0.updateId = "p}g5y3na-A0JvYG";
      String string0 = reorderContainer0.getUpdateId();
      assertEquals("p}g5y3na-A0JvYG", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ReorderContainer reorderContainer0 = new ReorderContainer();
      reorderContainer0.updateId = "";
      String string0 = reorderContainer0.getUpdateId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ReorderContainer reorderContainer0 = new ReorderContainer();
      reorderContainer0.setTo(2690);
      int int0 = reorderContainer0.getTo();
      assertEquals(2690, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ReorderContainer reorderContainer0 = new ReorderContainer();
      reorderContainer0.setTo((-2683));
      int int0 = reorderContainer0.getTo();
      assertEquals((-2683), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ReorderContainer reorderContainer0 = new ReorderContainer();
      reorderContainer0.setId("^OZ+TGnL");
      String string0 = reorderContainer0.getId();
      assertEquals("^OZ+TGnL", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ReorderContainer reorderContainer0 = new ReorderContainer();
      reorderContainer0.setFrom("com.sonos.services._1.ReorderContainer");
      String string0 = reorderContainer0.getFrom();
      assertEquals("com.sonos.services._1.ReorderContainer", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ReorderContainer reorderContainer0 = new ReorderContainer();
      String string0 = reorderContainer0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ReorderContainer reorderContainer0 = new ReorderContainer();
      reorderContainer0.setId("");
      String string0 = reorderContainer0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ReorderContainer reorderContainer0 = new ReorderContainer();
      String string0 = reorderContainer0.getFrom();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ReorderContainer reorderContainer0 = new ReorderContainer();
      int int0 = reorderContainer0.getTo();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ReorderContainer reorderContainer0 = new ReorderContainer();
      reorderContainer0.setFrom("");
      String string0 = reorderContainer0.getFrom();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ReorderContainer reorderContainer0 = new ReorderContainer();
      String string0 = reorderContainer0.getUpdateId();
      assertNull(string0);
  }
}
