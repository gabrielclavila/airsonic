/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 20:52:37 GMT 2024
 */

package org.airsonic.player.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.airsonic.player.domain.User;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class User_ESTest extends User_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      User user0 = new User("guest", "odlgcV^z:K*}DL<*", "guest");
      user0.setUploadRole(true);
      boolean boolean0 = user0.isUploadRole();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      User user0 = new User("guest", "@+@", "@+@", false, 2696L, 2696L, 0L);
      user0.setStreamRole(true);
      boolean boolean0 = user0.isStreamRole();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      User user0 = new User("ak5~f`gt9><=cEvv", "ak5~f`gt9><=cEvv", "ak5~f`gt9><=cEvv");
      user0.setShareRole(true);
      boolean boolean0 = user0.isShareRole();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      User user0 = new User("", "", "ag}twUn[4FDM");
      user0.setPodcastRole(true);
      boolean boolean0 = user0.isPodcastRole();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      User user0 = new User("q#4>A*M#=-|1vhCg", "q#4>A*M#=-|1vhCg", "q5Q$K9CBt%iw?b6v%", true, 0L, 1L, (-13L));
      user0.setPlaylistRole(true);
      boolean boolean0 = user0.isPlaylistRole();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      User user0 = new User("vjV%`t fU~lKPu25", (String) null, (String) null, true, 0L, 0L, 0L);
      boolean boolean0 = user0.isLdapAuthenticated();
      assertTrue(boolean0);
      assertEquals("vjV%`t fU~lKPu25", user0.getUsername());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      User user0 = new User("", "", "^9dIB`");
      user0.setJukeboxRole(true);
      boolean boolean0 = user0.isJukeboxRole();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      User user0 = new User("&2Z|}HA%,xt@~", "&2Z|}HA%,xt@~", "&2Z|}HA%,xt@~");
      user0.setDownloadRole(true);
      boolean boolean0 = user0.isDownloadRole();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      User user0 = new User("mC!ZK3{l,<", "mC!ZK3{l,<", "mC!ZK3{l,<");
      user0.setCoverArtRole(true);
      boolean boolean0 = user0.isCoverArtRole();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      User user0 = new User("'S", "'S", "'S");
      user0.setCommentRole(true);
      boolean boolean0 = user0.isCommentRole();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      User user0 = new User("", "", "", true, (-1241L), (-1241L), (-1241L));
      user0.setAdminRole(true);
      boolean boolean0 = user0.isAdminRole();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      User user0 = new User((String) null, (String) null, "", true, 0L, 0L, 0L);
      String string0 = user0.getUsername();
      assertTrue(user0.isLdapAuthenticated());
      assertNull(string0);
      assertEquals("", user0.getEmail());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      User user0 = new User("", " uSR", " uSR");
      String string0 = user0.getUsername();
      assertEquals(" uSR", user0.getPassword());
      assertEquals(" uSR", user0.getEmail());
      assertFalse(user0.isLdapAuthenticated());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      User user0 = new User("", (String) null, (String) null);
      String string0 = user0.getPassword();
      assertFalse(user0.isLdapAuthenticated());
      assertEquals("", user0.getUsername());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      User user0 = new User("", "", "", true, (-1241L), (-1241L), (-1241L));
      String string0 = user0.getPassword();
      assertEquals((-1241L), user0.getBytesStreamed());
      assertEquals("", user0.getEmail());
      assertTrue(user0.isLdapAuthenticated());
      assertEquals("", user0.getUsername());
      assertEquals((-1241L), user0.getBytesUploaded());
      assertEquals((-1241L), user0.getBytesDownloaded());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      User user0 = new User((String) null, (String) null, (String) null, true, (-1L), 0L, 3150L);
      String string0 = user0.getEmail();
      assertNull(string0);
      assertEquals(3150L, user0.getBytesUploaded());
      assertEquals(0L, user0.getBytesDownloaded());
      assertTrue(user0.isLdapAuthenticated());
      assertEquals((-1L), user0.getBytesStreamed());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      User user0 = new User((String) null, (String) null, "", true, 0L, 0L, 0L);
      String string0 = user0.getEmail();
      assertNotNull(string0);
      assertTrue(user0.isLdapAuthenticated());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      User user0 = new User("TG'vy9d$(s", "", "TG'vy9d$(s", false, 1957L, 1957L, (-1553L));
      user0.setBytesUploaded(1L);
      long long0 = user0.getBytesUploaded();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      User user0 = new User("", "Mw~0euJ^;", " [share]", false, (-116L), (-116L), (-116L));
      long long0 = user0.getBytesUploaded();
      assertEquals(" [share]", user0.getEmail());
      assertEquals("", user0.getUsername());
      assertEquals((-116L), user0.getBytesDownloaded());
      assertEquals("Mw~0euJ^;", user0.getPassword());
      assertEquals((-116L), long0);
      assertFalse(user0.isLdapAuthenticated());
      assertEquals((-116L), user0.getBytesStreamed());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      User user0 = new User((String) null, (String) null, "", true, 0L, 0L, 0L);
      user0.setBytesStreamed(30L);
      long long0 = user0.getBytesStreamed();
      assertEquals(30L, long0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      User user0 = new User("", "", "", true, (-1241L), (-1241L), (-1241L));
      long long0 = user0.getBytesStreamed();
      assertEquals("", user0.getUsername());
      assertEquals("", user0.getPassword());
      assertEquals((-1241L), user0.getBytesDownloaded());
      assertEquals("", user0.getEmail());
      assertEquals((-1241L), user0.getBytesUploaded());
      assertEquals((-1241L), long0);
      assertTrue(user0.isLdapAuthenticated());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      User user0 = new User(" [upload]", "", "H{F(6", false, 1L, 1L, 1L);
      long long0 = user0.getBytesDownloaded();
      assertEquals(1L, user0.getBytesUploaded());
      assertEquals(" [upload]", user0.getUsername());
      assertEquals(1L, user0.getBytesStreamed());
      assertFalse(user0.isLdapAuthenticated());
      assertEquals(1L, long0);
      assertEquals("H{F(6", user0.getEmail());
      assertEquals("", user0.getPassword());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      User user0 = new User("", "", "", true, 676L, (-1543L), (-1543L));
      long long0 = user0.getBytesDownloaded();
      assertEquals((-1543L), user0.getBytesUploaded());
      assertEquals("", user0.getEmail());
      assertEquals(676L, user0.getBytesStreamed());
      assertTrue(user0.isLdapAuthenticated());
      assertEquals("", user0.getUsername());
      assertEquals("", user0.getPassword());
      assertEquals((-1543L), long0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      User user0 = new User((String) null, (String) null, (String) null, true, (-1L), 0L, 3150L);
      // Undeclared exception!
      try { 
        user0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      User user0 = new User("", "", "", true, (-3440L), (-3440L), (-3440L));
      user0.setShareRole(true);
      user0.toString();
      assertTrue(user0.isShareRole());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      User user0 = new User("'S", "'S", "'S");
      user0.setCommentRole(true);
      user0.toString();
      assertTrue(user0.isCommentRole());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      User user0 = new User("Ahq:QGf4F/E_(H6ws$", "Ahq:QGf4F/E_(H6ws$", "Ahq:QGf4F/E_(H6ws$");
      user0.setUploadRole(true);
      user0.toString();
      assertTrue(user0.isUploadRole());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      User user0 = new User("", "", "", true, (-3440L), (-3440L), (-3440L));
      user0.setSettingsRole(true);
      user0.toString();
      assertTrue(user0.isSettingsRole());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      User user0 = new User("", "", "", true, (-3440L), (-3440L), (-3440L));
      String string0 = user0.toString();
      assertEquals((-3440L), user0.getBytesStreamed());
      assertEquals("", string0);
      assertEquals((-3440L), user0.getBytesDownloaded());
      assertTrue(user0.isLdapAuthenticated());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getEmail());
      assertEquals((-3440L), user0.getBytesUploaded());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      User user0 = new User("", "", "", true, (-3440L), (-3440L), (-3440L));
      boolean boolean0 = user0.isSettingsRole();
      assertEquals("", user0.getPassword());
      assertEquals((-3440L), user0.getBytesStreamed());
      assertFalse(boolean0);
      assertTrue(user0.isLdapAuthenticated());
      assertEquals((-3440L), user0.getBytesUploaded());
      assertEquals("", user0.getEmail());
      assertEquals((-3440L), user0.getBytesDownloaded());
      assertEquals("", user0.getUsername());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      User user0 = new User("~cfsUEaJgFd*yRPq", "~cfsUEaJgFd*yRPq", "~cfsUEaJgFd*yRPq");
      user0.setAdminRole(true);
      boolean boolean0 = user0.isSettingsRole();
      assertTrue(user0.isAdminRole());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      User user0 = new User("", "", "", true, (-3440L), (-3440L), (-3440L));
      user0.setEmail("");
      assertEquals((-3440L), user0.getBytesStreamed());
      assertTrue(user0.isLdapAuthenticated());
      assertEquals((-3440L), user0.getBytesDownloaded());
      assertEquals("", user0.getUsername());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getEmail());
      assertEquals((-3440L), user0.getBytesUploaded());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      User user0 = new User("'S", "'S", "'S");
      user0.setJukeboxRole(true);
      user0.toString();
      assertTrue(user0.isJukeboxRole());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      User user0 = new User("Ahq:QGf4F/E_(H6ws$", "Ahq:QGf4F/E_(H6ws$", "Ahq:QGf4F/E_(H6ws$");
      user0.setStreamRole(true);
      user0.toString();
      assertTrue(user0.isStreamRole());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      User user0 = new User("H:M", "H:M", "H:M");
      String string0 = user0.getUsername();
      assertFalse(user0.isLdapAuthenticated());
      assertEquals("H:M", user0.getPassword());
      assertEquals("H:M", user0.getEmail());
      assertEquals("H:M", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      User user0 = new User("", "", "", true, (-3440L), (-3440L), (-3440L));
      user0.isAdminRole();
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getUsername());
      assertEquals((-3440L), user0.getBytesDownloaded());
      assertEquals((-3440L), user0.getBytesUploaded());
      assertTrue(user0.isLdapAuthenticated());
      assertEquals((-3440L), user0.getBytesStreamed());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      User user0 = new User("~cfsUEaJgFd*yRPq", "~cfsUEaJgFd*yRPq", "~cfsUEaJgFd*yRPq");
      user0.isStreamRole();
      assertEquals("~cfsUEaJgFd*yRPq", user0.getUsername());
      assertFalse(user0.isLdapAuthenticated());
      assertEquals("~cfsUEaJgFd*yRPq", user0.getEmail());
      assertEquals("~cfsUEaJgFd*yRPq", user0.getPassword());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      User user0 = new User("~cfsUEaJgFd*yRPq", "~cfsUEaJgFd*yRPq", "~cfsUEaJgFd*yRPq");
      user0.isPodcastRole();
      assertFalse(user0.isLdapAuthenticated());
      assertEquals("~cfsUEaJgFd*yRPq", user0.getPassword());
      assertEquals("~cfsUEaJgFd*yRPq", user0.getEmail());
      assertEquals("~cfsUEaJgFd*yRPq", user0.getUsername());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      User user0 = new User(" [", " [", " [");
      boolean boolean0 = user0.isLdapAuthenticated();
      assertFalse(boolean0);
      assertEquals(" [", user0.getPassword());
      assertEquals(" [", user0.getEmail());
      assertEquals(" [", user0.getUsername());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      User user0 = new User("'S", "'S", "'S");
      String string0 = user0.getPassword();
      assertFalse(user0.isLdapAuthenticated());
      assertEquals("'S", user0.getEmail());
      assertEquals("'S", string0);
      assertEquals("'S", user0.getUsername());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      User user0 = new User("~cfsUEaJgFd*yRPq", "~cfsUEaJgFd*yRPq", "~cfsUEaJgFd*yRPq");
      user0.getBytesDownloaded();
      assertEquals("~cfsUEaJgFd*yRPq", user0.getPassword());
      assertFalse(user0.isLdapAuthenticated());
      assertEquals("~cfsUEaJgFd*yRPq", user0.getUsername());
      assertEquals("~cfsUEaJgFd*yRPq", user0.getEmail());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      User user0 = new User("Ahq:QGf4F/E_(H6ws$", "Ahq:QGf4F/E_(H6ws$", "Ahq:QGf4F/E_(H6ws$");
      user0.isJukeboxRole();
      assertEquals("Ahq:QGf4F/E_(H6ws$", user0.getPassword());
      assertEquals("Ahq:QGf4F/E_(H6ws$", user0.getEmail());
      assertFalse(user0.isLdapAuthenticated());
      assertEquals("Ahq:QGf4F/E_(H6ws$", user0.getUsername());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      User user0 = new User("Ahq:QGf4F/E_(H6ws$", "Ahq:QGf4F/E_(H6ws$", "Ahq:QGf4F/E_(H6ws$");
      user0.setAdminRole(true);
      user0.toString();
      assertTrue(user0.isSettingsRole());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      User user0 = new User("Ahq:QGf4F/E_(H6ws$", "Ahq:QGf4F/E_(H6ws$", "Ahq:QGf4F/E_(H6ws$");
      String string0 = user0.getEmail();
      assertFalse(user0.isLdapAuthenticated());
      assertEquals("Ahq:QGf4F/E_(H6ws$", user0.getUsername());
      assertEquals("Ahq:QGf4F/E_(H6ws$", user0.getPassword());
      assertEquals("Ahq:QGf4F/E_(H6ws$", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      User user0 = new User("'S", "'S", "'S");
      user0.setPassword("'S");
      assertEquals("'S", user0.getPassword());
      assertEquals("'S", user0.getUsername());
      assertEquals("'S", user0.getEmail());
      assertFalse(user0.isLdapAuthenticated());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      User user0 = new User("", "", "", true, (-3440L), (-3440L), (-3440L));
      user0.isUploadRole();
      assertEquals((-3440L), user0.getBytesStreamed());
      assertTrue(user0.isLdapAuthenticated());
      assertEquals((-3440L), user0.getBytesUploaded());
      assertEquals("", user0.getUsername());
      assertEquals("", user0.getPassword());
      assertEquals((-3440L), user0.getBytesDownloaded());
      assertEquals("", user0.getEmail());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      User user0 = new User("Ahq:QGf4F/E_(H6ws$", "Ahq:QGf4F/E_(H6ws$", "Ahq:QGf4F/E_(H6ws$");
      user0.getBytesUploaded();
      assertEquals("Ahq:QGf4F/E_(H6ws$", user0.getUsername());
      assertEquals("Ahq:QGf4F/E_(H6ws$", user0.getPassword());
      assertEquals("Ahq:QGf4F/E_(H6ws$", user0.getEmail());
      assertFalse(user0.isLdapAuthenticated());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      User user0 = new User(" [", " [", " [");
      user0.isShareRole();
      assertEquals(" [", user0.getEmail());
      assertEquals(" [", user0.getPassword());
      assertFalse(user0.isLdapAuthenticated());
      assertEquals(" [", user0.getUsername());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      User user0 = new User("'S", "'S", "'S");
      user0.setDownloadRole(true);
      user0.toString();
      assertTrue(user0.isDownloadRole());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      User user0 = new User("'S", "'S", "'S");
      user0.setPlaylistRole(true);
      user0.toString();
      assertTrue(user0.isPlaylistRole());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      User user0 = new User(" [", " [", " [");
      user0.setBytesDownloaded((-1291L));
      assertEquals((-1291L), user0.getBytesDownloaded());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      User user0 = new User("'S", "'S", "'S");
      user0.isCoverArtRole();
      assertEquals("'S", user0.getUsername());
      assertEquals("'S", user0.getPassword());
      assertEquals("'S", user0.getEmail());
      assertFalse(user0.isLdapAuthenticated());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      User user0 = new User("", "", "", true, (-3440L), (-3440L), (-3440L));
      assertFalse(user0.isSettingsRole());
      
      user0.setSettingsRole(true);
      boolean boolean0 = user0.isSettingsRole();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      User user0 = new User("'S", "'S", "'S");
      user0.isCommentRole();
      assertEquals("'S", user0.getUsername());
      assertFalse(user0.isLdapAuthenticated());
      assertEquals("'S", user0.getPassword());
      assertEquals("'S", user0.getEmail());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      User user0 = new User("", "", "", true, (-3440L), (-3440L), (-3440L));
      user0.setPodcastRole(true);
      user0.toString();
      assertTrue(user0.isPodcastRole());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      User user0 = new User("Ahq:QGf4F/E_(H6ws$", "Ahq:QGf4F/E_(H6ws$", "Ahq:QGf4F/E_(H6ws$");
      user0.setCoverArtRole(true);
      user0.toString();
      assertTrue(user0.isCoverArtRole());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      User user0 = new User("H:M", "H:M", "H:M");
      user0.getBytesStreamed();
      assertEquals("H:M", user0.getUsername());
      assertEquals("H:M", user0.getPassword());
      assertEquals("H:M", user0.getEmail());
      assertFalse(user0.isLdapAuthenticated());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      User user0 = new User(" [", " [", " [");
      user0.setLdapAuthenticated(false);
      assertEquals(" [", user0.getPassword());
      assertFalse(user0.isLdapAuthenticated());
      assertEquals(" [", user0.getUsername());
      assertEquals(" [", user0.getEmail());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      User user0 = new User("H:M", "H:M", "H:M");
      user0.isPlaylistRole();
      assertEquals("H:M", user0.getUsername());
      assertEquals("H:M", user0.getEmail());
      assertFalse(user0.isLdapAuthenticated());
      assertEquals("H:M", user0.getPassword());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      User user0 = new User("Ahq:QGf4F/E_(H6ws$", "Ahq:QGf4F/E_(H6ws$", "Ahq:QGf4F/E_(H6ws$");
      user0.isDownloadRole();
      assertEquals("Ahq:QGf4F/E_(H6ws$", user0.getEmail());
      assertEquals("Ahq:QGf4F/E_(H6ws$", user0.getPassword());
      assertEquals("Ahq:QGf4F/E_(H6ws$", user0.getUsername());
      assertFalse(user0.isLdapAuthenticated());
  }
}
