/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 15:34:47 GMT 2024
 */

package org.subsonic.restapi;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.subsonic.restapi.AlbumID3;
import org.subsonic.restapi.ArtistWithAlbumsID3;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArtistWithAlbumsID3_ESTest extends ArtistWithAlbumsID3_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArtistWithAlbumsID3 artistWithAlbumsID3_0 = new ArtistWithAlbumsID3();
      LinkedList<AlbumID3> linkedList0 = new LinkedList<AlbumID3>();
      AlbumID3 albumID3_0 = new AlbumID3();
      linkedList0.add(albumID3_0);
      artistWithAlbumsID3_0.album = (List<AlbumID3>) linkedList0;
      List<AlbumID3> list0 = artistWithAlbumsID3_0.getAlbum();
      assertTrue(list0.contains(albumID3_0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ArtistWithAlbumsID3 artistWithAlbumsID3_0 = new ArtistWithAlbumsID3();
      List<AlbumID3> list0 = artistWithAlbumsID3_0.getAlbum();
      List<AlbumID3> list1 = artistWithAlbumsID3_0.getAlbum();
      assertSame(list1, list0);
  }
}
