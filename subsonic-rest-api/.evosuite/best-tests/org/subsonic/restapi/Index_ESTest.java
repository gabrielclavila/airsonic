/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 15:26:22 GMT 2024
 */

package org.subsonic.restapi;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.subsonic.restapi.Artist;
import org.subsonic.restapi.Index;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Index_ESTest extends Index_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Index index0 = new Index();
      index0.name = "-I";
      String string0 = index0.getName();
      assertEquals("-I", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Index index0 = new Index();
      index0.setName("");
      String string0 = index0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Index index0 = new Index();
      LinkedList<Artist> linkedList0 = new LinkedList<Artist>();
      index0.artist = (List<Artist>) linkedList0;
      Artist artist0 = new Artist();
      linkedList0.offerLast(artist0);
      List<Artist> list0 = index0.getArtist();
      assertTrue(list0.contains(artist0));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Index index0 = new Index();
      List<Artist> list0 = index0.getArtist();
      List<Artist> list1 = index0.getArtist();
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Index index0 = new Index();
      String string0 = index0.getName();
      assertNull(string0);
  }
}
