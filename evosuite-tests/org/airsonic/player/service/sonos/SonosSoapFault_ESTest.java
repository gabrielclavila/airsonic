/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 20:43:38 GMT 2024
 */

package org.airsonic.player.service.sonos;

import org.junit.Test;
import static org.junit.Assert.*;
import org.airsonic.player.service.sonos.SonosSoapFault;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SonosSoapFault_ESTest extends SonosSoapFault_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SonosSoapFault sonosSoapFault0 = new SonosSoapFault("org.airsonic.player.service.sonos.SonosSoapFault$LoginUnauthorized", (-4840));
      int int0 = sonosSoapFault0.getSonosError();
      assertEquals((-4840), int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SonosSoapFault sonosSoapFault0 = new SonosSoapFault((String) null, (-4237));
      String string0 = sonosSoapFault0.getFaultCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SonosSoapFault sonosSoapFault0 = new SonosSoapFault("", 0);
      String string0 = sonosSoapFault0.getFaultCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SonosSoapFault.LoginUnauthorized sonosSoapFault_LoginUnauthorized0 = new SonosSoapFault.LoginUnauthorized();
      int int0 = sonosSoapFault_LoginUnauthorized0.getSonosError();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SonosSoapFault.LoginUnauthorized sonosSoapFault_LoginUnauthorized0 = new SonosSoapFault.LoginUnauthorized();
      String string0 = sonosSoapFault_LoginUnauthorized0.getFaultCode();
      assertEquals("Client.LoginUnauthorized", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SonosSoapFault.LoginInvalid sonosSoapFault_LoginInvalid0 = new SonosSoapFault.LoginInvalid();
      int int0 = sonosSoapFault_LoginInvalid0.getSonosError();
      assertEquals(0, int0);
  }
}
