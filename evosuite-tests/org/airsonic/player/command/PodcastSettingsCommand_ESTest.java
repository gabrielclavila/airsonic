/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 21:18:59 GMT 2024
 */

package org.airsonic.player.command;

import org.junit.Test;
import static org.junit.Assert.*;
import org.airsonic.player.command.PodcastSettingsCommand;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PodcastSettingsCommand_ESTest extends PodcastSettingsCommand_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PodcastSettingsCommand podcastSettingsCommand0 = new PodcastSettingsCommand();
      podcastSettingsCommand0.setInterval("x<R0!8ej-MRUP9YC3A{");
      String string0 = podcastSettingsCommand0.getInterval();
      assertEquals("x<R0!8ej-MRUP9YC3A{", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PodcastSettingsCommand podcastSettingsCommand0 = new PodcastSettingsCommand();
      podcastSettingsCommand0.setFolder("org.airsonic.player.command.PodcastSettingsCommand");
      String string0 = podcastSettingsCommand0.getFolder();
      assertEquals("org.airsonic.player.command.PodcastSettingsCommand", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PodcastSettingsCommand podcastSettingsCommand0 = new PodcastSettingsCommand();
      podcastSettingsCommand0.setEpisodeRetentionCount("org.airsonic.player.command.PodcastSettingsCommand");
      String string0 = podcastSettingsCommand0.getEpisodeRetentionCount();
      assertEquals("org.airsonic.player.command.PodcastSettingsCommand", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PodcastSettingsCommand podcastSettingsCommand0 = new PodcastSettingsCommand();
      podcastSettingsCommand0.setEpisodeRetentionCount("");
      String string0 = podcastSettingsCommand0.getEpisodeRetentionCount();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PodcastSettingsCommand podcastSettingsCommand0 = new PodcastSettingsCommand();
      podcastSettingsCommand0.setEpisodeDownloadCount("org.airsonic.player.command.PodcastSettingsCommand");
      String string0 = podcastSettingsCommand0.getEpisodeDownloadCount();
      assertEquals("org.airsonic.player.command.PodcastSettingsCommand", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PodcastSettingsCommand podcastSettingsCommand0 = new PodcastSettingsCommand();
      podcastSettingsCommand0.setEpisodeDownloadCount("");
      String string0 = podcastSettingsCommand0.getEpisodeDownloadCount();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PodcastSettingsCommand podcastSettingsCommand0 = new PodcastSettingsCommand();
      String string0 = podcastSettingsCommand0.getEpisodeRetentionCount();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PodcastSettingsCommand podcastSettingsCommand0 = new PodcastSettingsCommand();
      String string0 = podcastSettingsCommand0.getInterval();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PodcastSettingsCommand podcastSettingsCommand0 = new PodcastSettingsCommand();
      podcastSettingsCommand0.setInterval("");
      String string0 = podcastSettingsCommand0.getInterval();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PodcastSettingsCommand podcastSettingsCommand0 = new PodcastSettingsCommand();
      podcastSettingsCommand0.setFolder("");
      String string0 = podcastSettingsCommand0.getFolder();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PodcastSettingsCommand podcastSettingsCommand0 = new PodcastSettingsCommand();
      String string0 = podcastSettingsCommand0.getFolder();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PodcastSettingsCommand podcastSettingsCommand0 = new PodcastSettingsCommand();
      String string0 = podcastSettingsCommand0.getEpisodeDownloadCount();
      assertNull(string0);
  }
}
