/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 15:25:10 GMT 2024
 */

package org.subsonic.restapi;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.subsonic.restapi.PodcastChannel;
import org.subsonic.restapi.Podcasts;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Podcasts_ESTest extends Podcasts_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Podcasts podcasts0 = new Podcasts();
      LinkedList<PodcastChannel> linkedList0 = new LinkedList<PodcastChannel>();
      PodcastChannel podcastChannel0 = new PodcastChannel();
      linkedList0.add(podcastChannel0);
      podcasts0.channel = (List<PodcastChannel>) linkedList0;
      List<PodcastChannel> list0 = podcasts0.getChannel();
      assertTrue(list0.contains(podcastChannel0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Podcasts podcasts0 = new Podcasts();
      podcasts0.getChannel();
      List<PodcastChannel> list0 = podcasts0.getChannel();
      assertTrue(list0.isEmpty());
  }
}
