/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 21:03:16 GMT 2024
 */

package org.airsonic.player.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Stack;
import org.airsonic.player.domain.InternetRadio;
import org.airsonic.player.domain.MusicFolder;
import org.airsonic.player.domain.PlayQueue;
import org.airsonic.player.domain.Player;
import org.airsonic.player.domain.PlayerTechnology;
import org.airsonic.player.domain.RandomSearchCriteria;
import org.airsonic.player.domain.TranscodeScheme;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player();
      assertTrue(player0.isDynamicIp());
      
      player0.setDynamicIp(false);
      boolean boolean0 = player0.isDynamicIp();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      assertTrue(player0.isAutoControlEnabled());
      
      player0.setAutoControlEnabled(false);
      boolean boolean0 = player0.isAutoControlEnabled();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      player0.setUsername("E9`");
      player0.getUsername();
      assertTrue(player0.isDynamicIp());
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isM3uBomEnabled());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player();
      player0.setUsername("");
      player0.getUsername();
      assertTrue(player0.isDynamicIp());
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isAutoControlEnabled());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player();
      player0.setType("Player null [null]");
      player0.getType();
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isDynamicIp());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      player0.setType("");
      player0.getType();
      assertTrue(player0.isDynamicIp());
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isM3uBomEnabled());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player();
      player0.setTranscodeScheme((TranscodeScheme) null);
      player0.getTranscodeScheme();
      assertTrue(player0.isDynamicIp());
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isM3uBomEnabled());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      TranscodeScheme transcodeScheme0 = TranscodeScheme.MAX_48;
      player0.setTranscodeScheme(transcodeScheme0);
      player0.getTranscodeScheme();
      assertTrue(player0.isDynamicIp());
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isAutoControlEnabled());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player();
      PlayQueue playQueue0 = new PlayQueue();
      Integer integer0 = new Integer((-1513));
      Stack<MusicFolder> stack0 = new Stack<MusicFolder>();
      RandomSearchCriteria randomSearchCriteria0 = new RandomSearchCriteria((-1513), (String) null, integer0, integer0, stack0);
      playQueue0.setRandomSearchCriteria(randomSearchCriteria0);
      player0.setPlayQueue(playQueue0);
      player0.getPlayQueue();
      assertTrue(player0.isDynamicIp());
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isM3uBomEnabled());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      PlayQueue playQueue0 = new PlayQueue();
      playQueue0.setRepeatEnabled(true);
      player0.setPlayQueue(playQueue0);
      player0.getPlayQueue();
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isDynamicIp());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player();
      PlayQueue playQueue0 = new PlayQueue();
      MockDate mockDate0 = new MockDate(1290, 0, 0, 0, (-1128), (-5288));
      InternetRadio internetRadio0 = new InternetRadio("0d", "0d", (String) null, true, mockDate0);
      playQueue0.setInternetRadio(internetRadio0);
      player0.setPlayQueue(playQueue0);
      player0.getPlayQueue();
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isDynamicIp());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player();
      PlayQueue playQueue0 = new PlayQueue();
      playQueue0.next();
      player0.setPlayQueue(playQueue0);
      player0.getPlayQueue();
      assertTrue(player0.isDynamicIp());
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isAutoControlEnabled());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      player0.setName("^3[99$W@#M+'9u");
      player0.getName();
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isDynamicIp());
      assertTrue(player0.isAutoControlEnabled());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player();
      player0.setName("");
      player0.getName();
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isDynamicIp());
      assertTrue(player0.isAutoControlEnabled());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player();
      MockDate mockDate0 = new MockDate(592, 592, 592, (-1), 1871);
      player0.setLastSeen(mockDate0);
      player0.getLastSeen();
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isDynamicIp());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      player0.setJavaJukeboxMixer("%DIE");
      player0.getJavaJukeboxMixer();
      assertTrue(player0.isDynamicIp());
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isAutoControlEnabled());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player();
      player0.setJavaJukeboxMixer("");
      player0.getJavaJukeboxMixer();
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isDynamicIp());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player();
      player0.setIpAddress("Player 4 [:\"]");
      player0.getIpAddress();
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isDynamicIp());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player();
      player0.setIpAddress("");
      player0.getIpAddress();
      assertTrue(player0.isDynamicIp());
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isAutoControlEnabled());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      Integer integer0 = new Integer(0);
      player0.setId(integer0);
      player0.getId();
      assertTrue(player0.isDynamicIp());
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isM3uBomEnabled());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player();
      Integer integer0 = new Integer(2826);
      player0.setId(integer0);
      player0.getId();
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isDynamicIp());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      Integer integer0 = new Integer((-594));
      player0.setId(integer0);
      player0.getId();
      assertTrue(player0.isDynamicIp());
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isM3uBomEnabled());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player();
      player0.setClientId("$c9W.k}?f(>p&cck{");
      player0.getClientId();
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isDynamicIp());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player();
      player0.setClientId("");
      player0.getClientId();
      assertTrue(player0.isDynamicIp());
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isAutoControlEnabled());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.getShortDescription();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang/StringUtils
         //
         verifyException("org.airsonic.player.domain.Player", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.getDescription();
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isDynamicIp());
      assertEquals("Player null [null]", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player();
      player0.setName("^:k0a[{A?gk(`c");
      String string0 = player0.getDescription();
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isDynamicIp());
      assertEquals("^:k0a[{A?gk(`c [null]", string0);
      assertTrue(player0.isM3uBomEnabled());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isWeb();
      assertTrue(player0.isDynamicIp());
      assertTrue(boolean0);
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isM3uBomEnabled());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      PlayerTechnology playerTechnology0 = PlayerTechnology.EXTERNAL_WITH_PLAYLIST;
      player0.setTechnology(playerTechnology0);
      boolean boolean0 = player0.isWeb();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player();
      PlayerTechnology playerTechnology0 = PlayerTechnology.EXTERNAL_WITH_PLAYLIST;
      player0.setTechnology(playerTechnology0);
      boolean boolean0 = player0.isExternalWithPlaylist();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isExternalWithPlaylist();
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isM3uBomEnabled());
      assertFalse(boolean0);
      assertTrue(player0.isDynamicIp());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player();
      PlayerTechnology playerTechnology0 = PlayerTechnology.EXTERNAL;
      player0.setTechnology(playerTechnology0);
      boolean boolean0 = player0.isExternal();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isExternal();
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isM3uBomEnabled());
      assertFalse(boolean0);
      assertTrue(player0.isDynamicIp());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player();
      PlayerTechnology playerTechnology0 = PlayerTechnology.JAVA_JUKEBOX;
      player0.setTechnology(playerTechnology0);
      boolean boolean0 = player0.isJavaJukebox();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isJavaJukebox();
      assertTrue(player0.isDynamicIp());
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isM3uBomEnabled());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player();
      assertFalse(player0.isJukebox());
      
      PlayerTechnology playerTechnology0 = PlayerTechnology.JAVA_JUKEBOX;
      player0.setTechnology(playerTechnology0);
      boolean boolean0 = player0.isJukebox();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isJukebox();
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isM3uBomEnabled());
      assertFalse(boolean0);
      assertTrue(player0.isDynamicIp());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isM3uBomEnabled();
      assertTrue(boolean0);
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isDynamicIp());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      player0.getId();
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isDynamicIp());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      player0.getName();
      assertTrue(player0.isDynamicIp());
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isAutoControlEnabled());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isDynamicIp();
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      player0.getTechnology();
      assertTrue(player0.isDynamicIp());
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isM3uBomEnabled());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      player0.getJavaJukeboxMixer();
      assertTrue(player0.isDynamicIp());
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isAutoControlEnabled());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player();
      player0.getType();
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isDynamicIp());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player();
      player0.getClientId();
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isDynamicIp());
      assertTrue(player0.isAutoControlEnabled());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player();
      player0.getPlayQueue();
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isDynamicIp());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      player0.getLastSeen();
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isDynamicIp());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      player0.getTranscodeScheme();
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isDynamicIp());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      player0.getIpAddress();
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isDynamicIp());
      assertTrue(player0.isM3uBomEnabled());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player();
      player0.getUsername();
      assertTrue(player0.isDynamicIp());
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isM3uBomEnabled());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player();
      PlayerTechnology playerTechnology0 = PlayerTechnology.JUKEBOX;
      player0.setTechnology(playerTechnology0);
      boolean boolean0 = player0.isJukebox();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isAutoControlEnabled();
      assertTrue(boolean0);
      assertTrue(player0.isM3uBomEnabled());
      assertTrue(player0.isDynamicIp());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.toString();
      assertTrue(player0.isDynamicIp());
      assertEquals("Player null [null]", string0);
      assertTrue(player0.isAutoControlEnabled());
      assertTrue(player0.isM3uBomEnabled());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player();
      assertTrue(player0.isM3uBomEnabled());
      
      player0.setM3uBomEnabled(false);
      boolean boolean0 = player0.isM3uBomEnabled();
      assertFalse(boolean0);
  }
}
