/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 20:55:02 GMT 2024
 */

package org.airsonic.player.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import java.time.Clock;
import java.time.Instant;
import java.time.ZoneId;
import java.util.Date;
import org.airsonic.player.domain.PodcastEpisode;
import org.airsonic.player.domain.PodcastStatus;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PodcastEpisode_ESTest extends PodcastEpisode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = new Integer((-669));
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long((-1L));
      PodcastStatus podcastStatus0 = PodcastStatus.DOWNLOADING;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, (String) null, (String) null, "jf$|e5ob$L7", "(", mockDate0, ",Fq|,;~F", long0, long0, podcastStatus0, "");
      String string0 = podcastEpisode0.getUrl();
      assertEquals("(", podcastEpisode0.getDescription());
      assertEquals("", podcastEpisode0.getErrorMessage());
      assertNull(string0);
      assertEquals("jf$|e5ob$L7", podcastEpisode0.getTitle());
      assertEquals(",Fq|,;~F", podcastEpisode0.getDuration());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer(0);
      PodcastStatus podcastStatus0 = PodcastStatus.COMPLETED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, (String) null, (String) null, (String) null, (String) null, (Date) null, (String) null, (Long) null, (Long) null, podcastStatus0, "/Y+lqd");
      String string0 = podcastEpisode0.getTitle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer(768);
      MockDate mockDate0 = new MockDate(768, 768, 768, 768, 0, 768);
      Long long0 = new Long(0L);
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", "", "", mockDate0, "", long0, (Long) null, (PodcastStatus) null, "");
      String string0 = podcastEpisode0.getTitle();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer(768);
      MockDate mockDate0 = new MockDate(768, 768, 768, 768, 0, 768);
      Long long0 = new Long(0L);
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", "", "", mockDate0, "", long0, (Long) null, (PodcastStatus) null, "");
      podcastEpisode0.getStatus();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer((-708));
      Long long0 = new Long(1L);
      PodcastStatus podcastStatus0 = PodcastStatus.NEW;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", "", "KJcRAizF>>:9E.r", (Date) null, "", long0, long0, podcastStatus0, "");
      podcastEpisode0.getPublishDate();
      assertEquals("", podcastEpisode0.getErrorMessage());
      assertEquals("", podcastEpisode0.getTitle());
      assertEquals("", podcastEpisode0.getUrl());
      assertEquals("", podcastEpisode0.getDuration());
      assertEquals("", podcastEpisode0.getPath());
      assertEquals("KJcRAizF>>:9E.r", podcastEpisode0.getDescription());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(1);
      MockDate mockDate0 = new MockDate(0L);
      Long long0 = Long.getLong("DELETED");
      PodcastStatus podcastStatus0 = PodcastStatus.COMPLETED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "org.airsonic.player.domain.PodcastStatus", "org.airsonic.player.domain.PodcastStatus", "org.airsonic.player.domain.PodcastStatus", "DELETED", mockDate0, "org.airsonic.player.domain.PodcastStatus", (Long) null, long0, podcastStatus0, "$VALUES");
      assertEquals("org.airsonic.player.domain.PodcastStatus", podcastEpisode0.getPath());
      
      podcastEpisode0.setPath((String) null);
      podcastEpisode0.getPath();
      assertEquals("DELETED", podcastEpisode0.getDescription());
      assertEquals("$VALUES", podcastEpisode0.getErrorMessage());
      assertEquals("org.airsonic.player.domain.PodcastStatus", podcastEpisode0.getDuration());
      assertEquals("org.airsonic.player.domain.PodcastStatus", podcastEpisode0.getUrl());
      assertEquals("org.airsonic.player.domain.PodcastStatus", podcastEpisode0.getTitle());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(768);
      MockDate mockDate0 = new MockDate(768, 768, 768, 768, 0, 768);
      Long long0 = new Long(0L);
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", "", "", mockDate0, "", long0, (Long) null, (PodcastStatus) null, "");
      podcastEpisode0.setPath("~F");
      String string0 = podcastEpisode0.getPath();
      assertEquals("~F", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(3763);
      MockDate mockDate0 = new MockDate((-1133), (-3464), 6, 3763, (-1));
      Long long0 = new Long(0L);
      PodcastStatus podcastStatus0 = PodcastStatus.DELETED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "wN+U%fF", "wN+U%fF", "wN+U%fF", "4ykf?0v", mockDate0, "wN+U%fF", long0, long0, podcastStatus0, "wN+U%fF");
      podcastEpisode0.setMediaFileId(integer0);
      podcastEpisode0.getMediaFileId();
      assertEquals("4ykf?0v", podcastEpisode0.getDescription());
      assertEquals("wN+U%fF", podcastEpisode0.getUrl());
      assertEquals("wN+U%fF", podcastEpisode0.getTitle());
      assertEquals("wN+U%fF", podcastEpisode0.getDuration());
      assertEquals("wN+U%fF", podcastEpisode0.getPath());
      assertEquals("wN+U%fF", podcastEpisode0.getErrorMessage());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", 2832);
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(1L);
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", "org.airsonic.player.domain.PodcastEpisode", "", mockDate0, "", long0, long0, podcastStatus0, "");
      Integer integer1 = new Integer(0);
      podcastEpisode0.setMediaFileId(integer1);
      podcastEpisode0.getMediaFileId();
      assertEquals("", podcastEpisode0.getErrorMessage());
      assertEquals("", podcastEpisode0.getDescription());
      assertEquals("org.airsonic.player.domain.PodcastEpisode", podcastEpisode0.getTitle());
      assertEquals("", podcastEpisode0.getUrl());
      assertEquals("", podcastEpisode0.getDuration());
      assertEquals("", podcastEpisode0.getPath());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", (-2144577715));
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(1L);
      PodcastStatus podcastStatus0 = PodcastStatus.ERROR;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "Lm#{*-Hv0", "Lm#{*-Hv0", "Lm#{*-Hv0", mockDate0, "Lm#{*-Hv0", long0, long0, podcastStatus0, "org.airsonic.player.domain.PodcastEpisode");
      podcastEpisode0.setMediaFileId(integer0);
      podcastEpisode0.getMediaFileId();
      assertEquals("Lm#{*-Hv0", podcastEpisode0.getDuration());
      assertEquals("Lm#{*-Hv0", podcastEpisode0.getPath());
      assertEquals("", podcastEpisode0.getUrl());
      assertEquals("Lm#{*-Hv0", podcastEpisode0.getDescription());
      assertEquals("org.airsonic.player.domain.PodcastEpisode", podcastEpisode0.getErrorMessage());
      assertEquals("Lm#{*-Hv0", podcastEpisode0.getTitle());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", 2832);
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(1L);
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", "org.airsonic.player.domain.PodcastEpisode", "", mockDate0, "", long0, long0, podcastStatus0, "");
      Integer integer1 = new Integer((-5));
      podcastEpisode0.setMediaFileId(integer1);
      podcastEpisode0.getMediaFileId();
      assertEquals("", podcastEpisode0.getErrorMessage());
      assertEquals("", podcastEpisode0.getPath());
      assertEquals("org.airsonic.player.domain.PodcastEpisode", podcastEpisode0.getTitle());
      assertEquals("", podcastEpisode0.getUrl());
      assertEquals("", podcastEpisode0.getDescription());
      assertEquals("", podcastEpisode0.getDuration());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-2165L));
      Long long0 = new Long(2734L);
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      Integer integer0 = Integer.getInteger("wos.0x+_4fpuY+XV~e(");
      PodcastEpisode podcastEpisode0 = new PodcastEpisode((Integer) null, integer0, "#HBCGy`k", "7LJEU|6'yQB4Er", " '+T\"uXT1!", (String) null, mockDate0, (String) null, long0, long0, podcastStatus0, "");
      podcastEpisode0.getId();
      assertEquals("", podcastEpisode0.getErrorMessage());
      assertEquals(" '+T\"uXT1!", podcastEpisode0.getTitle());
      assertEquals("#HBCGy`k", podcastEpisode0.getUrl());
      assertEquals("7LJEU|6'yQB4Er", podcastEpisode0.getPath());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer((-87));
      MockDate mockDate0 = new MockDate((-2735), (-2735), (-87), 579, 1);
      Long long0 = new Long((-87));
      PodcastStatus podcastStatus0 = PodcastStatus.ERROR;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "DELETED", "", "", "", mockDate0, "", long0, long0, podcastStatus0, "");
      podcastEpisode0.getId();
      assertEquals("", podcastEpisode0.getTitle());
      assertEquals("DELETED", podcastEpisode0.getUrl());
      assertEquals("", podcastEpisode0.getErrorMessage());
      assertEquals("", podcastEpisode0.getPath());
      assertEquals("", podcastEpisode0.getDescription());
      assertEquals("", podcastEpisode0.getDuration());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MockDate mockDate0 = new MockDate((-1L));
      Long long0 = new Long((-1L));
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "f+zw6^_O", "f+zw6^_O", "f+zw6^_O", "", mockDate0, "", long0, long0, podcastStatus0, "a4LU+wh ");
      podcastEpisode0.getId();
      assertEquals("a4LU+wh ", podcastEpisode0.getErrorMessage());
      assertEquals("f+zw6^_O", podcastEpisode0.getTitle());
      assertEquals("", podcastEpisode0.getDuration());
      assertEquals("", podcastEpisode0.getDescription());
      assertEquals("f+zw6^_O", podcastEpisode0.getPath());
      assertEquals("f+zw6^_O", podcastEpisode0.getUrl());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer(768);
      MockDate mockDate0 = new MockDate(768, 768, 768, 768, 0, 768);
      Long long0 = new Long(0L);
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", "", "", mockDate0, "", long0, (Long) null, (PodcastStatus) null, "");
      Integer integer1 = podcastEpisode0.getId();
      assertEquals(768, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = new Integer((-15));
      MockDate mockDate0 = new MockDate(0, 592, (-15));
      Long long0 = new Long(592);
      PodcastStatus podcastStatus0 = PodcastStatus.NEW;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", (String) null, (String) null, mockDate0, "/NN\bu [dSfb^LusK}", (Long) null, long0, podcastStatus0, (String) null);
      String string0 = podcastEpisode0.getErrorMessage();
      assertNull(string0);
      assertEquals("/NN\bu [dSfb^LusK}", podcastEpisode0.getDuration());
      assertEquals("", podcastEpisode0.getUrl());
      assertEquals("", podcastEpisode0.getPath());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = new Integer(768);
      MockDate mockDate0 = new MockDate(768, 768, 768, 768, 0, 768);
      Long long0 = new Long(0L);
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", "", "", mockDate0, "", long0, (Long) null, (PodcastStatus) null, "");
      String string0 = podcastEpisode0.getErrorMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Integer integer0 = new Integer((-2144264031));
      Long long0 = new Long(0L);
      PodcastStatus podcastStatus0 = PodcastStatus.DELETED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", "", (String) null, (Date) null, (String) null, (Long) null, long0, podcastStatus0, "ET-~nvU::ktXMy");
      String string0 = podcastEpisode0.getDuration();
      assertEquals("", podcastEpisode0.getPath());
      assertEquals("", podcastEpisode0.getTitle());
      assertNull(string0);
      assertEquals("", podcastEpisode0.getUrl());
      assertEquals("ET-~nvU::ktXMy", podcastEpisode0.getErrorMessage());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Integer integer0 = new Integer(2674);
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(769L);
      PodcastStatus podcastStatus0 = PodcastStatus.NEW;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", "", "oc", mockDate0, "", long0, long0, podcastStatus0, "");
      String string0 = podcastEpisode0.getDuration();
      assertEquals("", podcastEpisode0.getTitle());
      assertEquals("", string0);
      assertEquals("", podcastEpisode0.getPath());
      assertEquals("", podcastEpisode0.getErrorMessage());
      assertEquals("", podcastEpisode0.getUrl());
      assertEquals("oc", podcastEpisode0.getDescription());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Integer integer0 = new Integer((-178));
      Long long0 = new Long((-178));
      MockDate mockDate0 = new MockDate((-178));
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", (String) null, "", (String) null, mockDate0, (String) null, long0, long0, podcastStatus0, (String) null);
      String string0 = podcastEpisode0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Integer integer0 = new Integer(2674);
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(769L);
      PodcastStatus podcastStatus0 = PodcastStatus.NEW;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", "", "oc", mockDate0, "", long0, long0, podcastStatus0, "");
      String string0 = podcastEpisode0.getDescription();
      assertEquals("", podcastEpisode0.getDuration());
      assertEquals("oc", string0);
      assertEquals("", podcastEpisode0.getTitle());
      assertEquals("", podcastEpisode0.getUrl());
      assertEquals("", podcastEpisode0.getPath());
      assertEquals("", podcastEpisode0.getErrorMessage());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Integer integer0 = new Integer(2143);
      Long long0 = Long.getLong("", (-28L));
      Long long1 = Long.getLong("NEW", 402L);
      PodcastStatus podcastStatus0 = PodcastStatus.COMPLETED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, ">iQ", ">iQ", ">iQ", ">iQ", (Date) null, ">iQ", long0, long1, podcastStatus0, "NEW");
      Double double0 = podcastEpisode0.getCompletionRate();
      assertEquals(">iQ", podcastEpisode0.getDuration());
      assertEquals((-14.357142857142858), (double)double0, 0.01);
      assertEquals(">iQ", podcastEpisode0.getPath());
      assertNotNull(double0);
      assertEquals("NEW", podcastEpisode0.getErrorMessage());
      assertEquals(">iQ", podcastEpisode0.getDescription());
      assertEquals(">iQ", podcastEpisode0.getTitle());
      assertEquals(">iQ", podcastEpisode0.getUrl());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MockDate mockDate0 = new MockDate(748L);
      Long long0 = new Long(748L);
      PodcastStatus podcastStatus0 = PodcastStatus.ERROR;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, (Integer) null, "(|sgBb=gO:tqW", "$VALUES", "DELETED", "", mockDate0, "DELETED", (Long) null, long0, podcastStatus0, ")ici6");
      Integer integer1 = podcastEpisode0.getChannelId();
      assertEquals(")ici6", podcastEpisode0.getErrorMessage());
      assertNull(integer1);
      assertEquals("", podcastEpisode0.getDescription());
      assertEquals("DELETED", podcastEpisode0.getDuration());
      assertEquals("(|sgBb=gO:tqW", podcastEpisode0.getUrl());
      assertEquals("$VALUES", podcastEpisode0.getPath());
      assertEquals("DELETED", podcastEpisode0.getTitle());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Integer integer0 = new Integer(3763);
      Integer integer1 = new Integer((-1133));
      MockDate mockDate0 = new MockDate((-1133), (-3464), 6, 3763, (-1));
      Long long0 = new Long(0L);
      PodcastStatus podcastStatus0 = PodcastStatus.DELETED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer1, "wN+U%fF", "wN+U%fF", "wN+U%fF", "4ykf?0v", mockDate0, "wN+U%fF", long0, long0, podcastStatus0, "wN+U%fF");
      Integer integer2 = podcastEpisode0.getChannelId();
      assertEquals("4ykf?0v", podcastEpisode0.getDescription());
      assertEquals("wN+U%fF", podcastEpisode0.getTitle());
      assertEquals("wN+U%fF", podcastEpisode0.getUrl());
      assertEquals(3763, (int)podcastEpisode0.getId());
      assertEquals((-1133), (int)integer2);
      assertEquals("wN+U%fF", podcastEpisode0.getDuration());
      assertEquals("wN+U%fF", podcastEpisode0.getPath());
      assertEquals("wN+U%fF", podcastEpisode0.getErrorMessage());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(0);
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "~u$imw]+Us)yc#!fZa", "8uzlPP1u3.D", "8uzlPP1u3.D", "~u$imw]+Us)yc#!fZa", mockDate0, "~u$imw]+Us)yc#!fZa", long0, long0, podcastStatus0, "djqX|Vn[@<v8%d");
      podcastEpisode0.getChannelId();
      assertEquals("~u$imw]+Us)yc#!fZa", podcastEpisode0.getUrl());
      assertEquals("8uzlPP1u3.D", podcastEpisode0.getPath());
      assertEquals("8uzlPP1u3.D", podcastEpisode0.getTitle());
      assertEquals("~u$imw]+Us)yc#!fZa", podcastEpisode0.getDescription());
      assertEquals("~u$imw]+Us)yc#!fZa", podcastEpisode0.getDuration());
      assertEquals("djqX|Vn[@<v8%d", podcastEpisode0.getErrorMessage());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Integer integer0 = new Integer(2674);
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(769L);
      PodcastStatus podcastStatus0 = PodcastStatus.NEW;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", "", "oc", mockDate0, "", long0, long0, podcastStatus0, "");
      podcastEpisode0.getChannelId();
      assertEquals("", podcastEpisode0.getDuration());
      assertEquals("oc", podcastEpisode0.getDescription());
      assertEquals("", podcastEpisode0.getTitle());
      assertEquals("", podcastEpisode0.getUrl());
      assertEquals("", podcastEpisode0.getErrorMessage());
      assertEquals("", podcastEpisode0.getPath());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Integer integer0 = new Integer((-1214));
      Instant instant0 = MockInstant.ofEpochMilli((-5049L));
      Date date0 = Date.from(instant0);
      PodcastStatus podcastStatus0 = PodcastStatus.COMPLETED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "bC'AcZS", "", "lQN d\"HFj+Y+b&a", date0, "bC'AcZS", (Long) null, (Long) null, podcastStatus0, "lQN d\"HFj+Y+b&a");
      podcastEpisode0.getBytesTotal();
      assertEquals("", podcastEpisode0.getTitle());
      assertEquals("lQN d\"HFj+Y+b&a", podcastEpisode0.getErrorMessage());
      assertEquals("bC'AcZS", podcastEpisode0.getDuration());
      assertEquals("", podcastEpisode0.getUrl());
      assertEquals("bC'AcZS", podcastEpisode0.getPath());
      assertEquals("lQN d\"HFj+Y+b&a", podcastEpisode0.getDescription());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Integer integer0 = new Integer((-3341));
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(0L);
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "J'=F0PWmp&}6\"", "J'=F0PWmp&}6\"", "`b3;6)Uk?A#-?F(:p", (String) null, mockDate0, "J'=F0PWmp&}6\"", long0, long0, podcastStatus0, (String) null);
      podcastEpisode0.getBytesTotal();
      assertEquals("J'=F0PWmp&}6\"", podcastEpisode0.getPath());
      assertEquals("J'=F0PWmp&}6\"", podcastEpisode0.getUrl());
      assertEquals("J'=F0PWmp&}6\"", podcastEpisode0.getDuration());
      assertEquals("`b3;6)Uk?A#-?F(:p", podcastEpisode0.getTitle());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MockDate mockDate0 = new MockDate(2567, (-1), 0);
      Long long0 = new Long((-1));
      PodcastStatus podcastStatus0 = PodcastStatus.COMPLETED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode((Integer) null, (Integer) null, "", "[Ggwb*_#\"AA''v4", "", "", mockDate0, "[Ggwb*_#\"AA''v4", long0, long0, podcastStatus0, "");
      podcastEpisode0.getBytesTotal();
      assertEquals("[Ggwb*_#\"AA''v4", podcastEpisode0.getPath());
      assertEquals("", podcastEpisode0.getUrl());
      assertEquals("", podcastEpisode0.getTitle());
      assertEquals("[Ggwb*_#\"AA''v4", podcastEpisode0.getDuration());
      assertEquals("", podcastEpisode0.getDescription());
      assertEquals("", podcastEpisode0.getErrorMessage());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Integer integer0 = new Integer((-1214));
      Instant instant0 = MockInstant.ofEpochMilli((-5049L));
      Date date0 = Date.from(instant0);
      PodcastStatus podcastStatus0 = PodcastStatus.COMPLETED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "bC'AcZS", "", "lQN d\"HFj+Y+b&a", date0, "bC'AcZS", (Long) null, (Long) null, podcastStatus0, "lQN d\"HFj+Y+b&a");
      Long long0 = new Long(0L);
      podcastEpisode0.setBytesDownloaded(long0);
      podcastEpisode0.getBytesDownloaded();
      assertEquals("lQN d\"HFj+Y+b&a", podcastEpisode0.getErrorMessage());
      assertEquals("", podcastEpisode0.getTitle());
      assertEquals("lQN d\"HFj+Y+b&a", podcastEpisode0.getDescription());
      assertEquals("bC'AcZS", podcastEpisode0.getPath());
      assertEquals("", podcastEpisode0.getUrl());
      assertEquals("bC'AcZS", podcastEpisode0.getDuration());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ZoneId zoneId0 = ZoneId.systemDefault();
      Clock clock0 = MockClock.system(zoneId0);
      Instant instant0 = MockInstant.now(clock0);
      Date date0 = Date.from(instant0);
      Long long0 = new Long(1L);
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "@Y&1R'P3J7)`%xvEY>a", "", "|uic<JO", "4_6SLFu=\"l2)\"?", date0, "", long0, long0, podcastStatus0, (String) null);
      podcastEpisode0.getBytesDownloaded();
      assertEquals("", podcastEpisode0.getPath());
      assertEquals("4_6SLFu=\"l2)\"?", podcastEpisode0.getDescription());
      assertEquals("|uic<JO", podcastEpisode0.getTitle());
      assertEquals("@Y&1R'P3J7)`%xvEY>a", podcastEpisode0.getUrl());
      assertEquals("", podcastEpisode0.getDuration());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MockDate mockDate0 = new MockDate(2567, (-1), 0);
      Long long0 = new Long((-1));
      PodcastStatus podcastStatus0 = PodcastStatus.COMPLETED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode((Integer) null, (Integer) null, "", "[Ggwb*_#\"AA''v4", "", "", mockDate0, "[Ggwb*_#\"AA''v4", long0, long0, podcastStatus0, "");
      podcastEpisode0.getBytesDownloaded();
      assertEquals("[Ggwb*_#\"AA''v4", podcastEpisode0.getDuration());
      assertEquals("", podcastEpisode0.getErrorMessage());
      assertEquals("", podcastEpisode0.getTitle());
      assertEquals("", podcastEpisode0.getDescription());
      assertEquals("", podcastEpisode0.getUrl());
      assertEquals("[Ggwb*_#\"AA''v4", podcastEpisode0.getPath());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Integer integer0 = new Integer(768);
      MockDate mockDate0 = new MockDate(768, 768, 768, 768, 768, 768);
      Long long0 = new Long(0L);
      PodcastStatus podcastStatus0 = PodcastStatus.DOWNLOADING;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", "", "", mockDate0, "", long0, long0, podcastStatus0, "");
      Double double0 = podcastEpisode0.getCompletionRate();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", 2832);
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(1L);
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", "org.airsonic.player.domain.PodcastEpisode", "", mockDate0, "", long0, long0, podcastStatus0, "");
      Double double0 = podcastEpisode0.getCompletionRate();
      assertEquals("", podcastEpisode0.getErrorMessage());
      assertEquals("", podcastEpisode0.getPath());
      assertNotNull(double0);
      assertEquals("", podcastEpisode0.getDescription());
      assertEquals(1.0, (double)double0, 0.01);
      assertEquals("", podcastEpisode0.getDuration());
      assertEquals("org.airsonic.player.domain.PodcastEpisode", podcastEpisode0.getTitle());
      assertEquals("", podcastEpisode0.getUrl());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MockDate mockDate0 = new MockDate((long) integer0);
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "8.zrg$vS_8", "8.zrg$vS_8", "8.zrg$vS_8", "8.zrg$vS_8", mockDate0, "8.zrg$vS_8", (Long) null, (Long) null, podcastStatus0, "8.zrg$vS_8");
      Double double0 = podcastEpisode0.getCompletionRate();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Integer integer0 = new Integer(875);
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(875);
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "{K*Kazo%=ISa", "{K*Kazo%=ISa", "{K*Kazo%=ISa", "{K*Kazo%=ISa", mockDate0, "{K*Kazo%=ISa", long0, long0, podcastStatus0, "{K*Kazo%=ISa");
      String string0 = podcastEpisode0.getTitle();
      assertEquals("{K*Kazo%=ISa", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", 2832);
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(1L);
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", "org.airsonic.player.domain.PodcastEpisode", "", mockDate0, "", long0, long0, podcastStatus0, "");
      assertEquals("", podcastEpisode0.getDescription());
      
      podcastEpisode0.setDescription("org.airsonic.player.domain.PodcastEpisode");
      assertEquals("", podcastEpisode0.getDuration());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Integer integer0 = new Integer(1975);
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(1975);
      PodcastStatus podcastStatus0 = PodcastStatus.DELETED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "?8Q&*&i;&uj7", "?8Q&*&i;&uj7", "?8Q&*&i;&uj7", "?8Q&*&i;&uj7", mockDate0, "?8Q&*&i;&uj7", long0, long0, podcastStatus0, "?8Q&*&i;&uj7");
      podcastEpisode0.setBytesTotal(long0);
      assertEquals(1.0, podcastEpisode0.getCompletionRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Integer integer0 = new Integer(1975);
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(1975);
      PodcastStatus podcastStatus0 = PodcastStatus.DELETED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "?8Q&*&i;&uj7", "?8Q&*&i;&uj7", "?8Q&*&i;&uj7", "?8Q&*&i;&uj7", mockDate0, "?8Q&*&i;&uj7", long0, long0, podcastStatus0, "?8Q&*&i;&uj7");
      podcastEpisode0.setStatus(podcastStatus0);
      assertEquals("?8Q&*&i;&uj7", podcastEpisode0.getErrorMessage());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Integer integer0 = new Integer(875);
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(875);
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "{K*Kazo%=ISa", "{K*Kazo%=ISa", "{K*Kazo%=ISa", "{K*Kazo%=ISa", mockDate0, "{K*Kazo%=ISa", long0, long0, podcastStatus0, "{K*Kazo%=ISa");
      podcastEpisode0.setDuration("{K*Kazo%=ISa");
      assertEquals(875, (int)podcastEpisode0.getId());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", 2832);
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(1L);
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", "org.airsonic.player.domain.PodcastEpisode", "", mockDate0, "", long0, long0, podcastStatus0, "");
      assertEquals("", podcastEpisode0.getUrl());
      
      podcastEpisode0.setUrl("org.airsonic.player.domain.PodcastEpisode");
      podcastEpisode0.getUrl();
      assertEquals("org.airsonic.player.domain.PodcastEpisode", podcastEpisode0.getTitle());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", 2832);
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(1L);
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", "org.airsonic.player.domain.PodcastEpisode", "", mockDate0, "", long0, long0, podcastStatus0, "");
      String string0 = podcastEpisode0.getUrl();
      assertEquals("org.airsonic.player.domain.PodcastEpisode", podcastEpisode0.getTitle());
      assertEquals("", podcastEpisode0.getErrorMessage());
      assertEquals("", podcastEpisode0.getPath());
      assertEquals("", podcastEpisode0.getDescription());
      assertEquals("", podcastEpisode0.getDuration());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Integer integer0 = new Integer(2674);
      MockDate mockDate0 = new MockDate(2674, 2674, 2674, 2674, 2674);
      Long long0 = new Long(2674);
      PodcastStatus podcastStatus0 = PodcastStatus.DOWNLOADING;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "PH", "PH", "PH", "PH", mockDate0, "PH", long0, long0, podcastStatus0, "PH");
      String string0 = podcastEpisode0.getErrorMessage();
      assertEquals("PH", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Integer integer0 = new Integer(1975);
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(1975);
      PodcastStatus podcastStatus0 = PodcastStatus.DELETED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "?8Q&*&i;&uj7", "?8Q&*&i;&uj7", "?8Q&*&i;&uj7", "?8Q&*&i;&uj7", mockDate0, "?8Q&*&i;&uj7", long0, long0, podcastStatus0, "?8Q&*&i;&uj7");
      podcastEpisode0.setErrorMessage("?8Q&*&i;&uj7");
      assertNull(podcastEpisode0.getMediaFileId());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Integer integer0 = new Integer(768);
      MockDate mockDate0 = new MockDate(768, 768, 768, 768, 768, 768);
      Long long0 = new Long(0L);
      PodcastStatus podcastStatus0 = PodcastStatus.DOWNLOADING;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", "", "", mockDate0, "", long0, long0, podcastStatus0, "");
      String string0 = podcastEpisode0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", 2832);
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(1L);
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", "org.airsonic.player.domain.PodcastEpisode", "", mockDate0, "", long0, long0, podcastStatus0, "");
      podcastEpisode0.getStatus();
      assertEquals("", podcastEpisode0.getDuration());
      assertEquals("", podcastEpisode0.getErrorMessage());
      assertEquals("", podcastEpisode0.getPath());
      assertEquals("", podcastEpisode0.getDescription());
      assertEquals("org.airsonic.player.domain.PodcastEpisode", podcastEpisode0.getTitle());
      assertEquals("", podcastEpisode0.getUrl());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Integer integer0 = new Integer(2674);
      MockDate mockDate0 = new MockDate(2674, 2674, 2674, 2674, 2674);
      Long long0 = new Long(2674);
      PodcastStatus podcastStatus0 = PodcastStatus.DOWNLOADING;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "PH", "PH", "PH", "PH", mockDate0, "PH", long0, long0, podcastStatus0, "PH");
      assertEquals(1.0, podcastEpisode0.getCompletionRate(), 0.01);
      
      podcastEpisode0.setBytesDownloaded((Long) null);
      Double double0 = podcastEpisode0.getCompletionRate();
      assertEquals(0.0, podcastEpisode0.getCompletionRate(), 0.01);
      assertNotNull(double0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", 2832);
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(1L);
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", "org.airsonic.player.domain.PodcastEpisode", "", mockDate0, "", long0, long0, podcastStatus0, "");
      podcastEpisode0.setPublishDate(mockDate0);
      assertEquals("", podcastEpisode0.getDuration());
      assertEquals("", podcastEpisode0.getErrorMessage());
      assertEquals("", podcastEpisode0.getDescription());
      assertEquals("org.airsonic.player.domain.PodcastEpisode", podcastEpisode0.getTitle());
      assertEquals("", podcastEpisode0.getUrl());
      assertEquals("", podcastEpisode0.getPath());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Integer integer0 = new Integer(2867);
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(2867);
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", "", "", mockDate0, "", long0, long0, podcastStatus0, "");
      String string0 = podcastEpisode0.getPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Integer integer0 = new Integer(2867);
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(2867);
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", "", "", mockDate0, "", long0, long0, podcastStatus0, "");
      Long long1 = podcastEpisode0.getBytesTotal();
      assertEquals(2867L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Integer integer0 = new Integer(13);
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(13);
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "D#WNWNLOADING", "D#WNWNLOADING", "D#WNWNLOADING", "D#WNWNLOADING", mockDate0, "D#WNWNLOADING", long0, long0, podcastStatus0, "D#WNWNLOADING");
      podcastEpisode0.setTitle("D#WNWNLOADING");
      assertNull(podcastEpisode0.getMediaFileId());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Integer integer0 = new Integer(2867);
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(2867);
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "", "", "", "", mockDate0, "", long0, long0, podcastStatus0, "");
      Integer integer1 = podcastEpisode0.getMediaFileId();
      assertNull(integer1);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Integer integer0 = new Integer(2674);
      MockDate mockDate0 = new MockDate(2674, 2674, 2674, 2674, 2674);
      Long long0 = new Long(2674);
      PodcastStatus podcastStatus0 = PodcastStatus.DOWNLOADING;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "PH", "PH", "PH", "PH", mockDate0, "PH", long0, long0, podcastStatus0, "PH");
      String string0 = podcastEpisode0.getDuration();
      assertEquals("PH", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Integer integer0 = new Integer(1975);
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(1975);
      PodcastStatus podcastStatus0 = PodcastStatus.DELETED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "?8Q&*&i;&uj7", "?8Q&*&i;&uj7", "?8Q&*&i;&uj7", "?8Q&*&i;&uj7", mockDate0, "?8Q&*&i;&uj7", long0, long0, podcastStatus0, "?8Q&*&i;&uj7");
      Date date0 = podcastEpisode0.getPublishDate();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Integer integer0 = new Integer(13);
      MockDate mockDate0 = new MockDate();
      Long long0 = new Long(13);
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "D#WNWNLOADING", "D#WNWNLOADING", "D#WNWNLOADING", "D#WNWNLOADING", mockDate0, "D#WNWNLOADING", long0, long0, podcastStatus0, "D#WNWNLOADING");
      Integer integer1 = podcastEpisode0.getId();
      assertEquals(13, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Integer integer0 = new Integer(0);
      MockDate mockDate0 = new MockDate((long) integer0);
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode(integer0, integer0, "8.zrg$vS_8", "8.zrg$vS_8", "8.zrg$vS_8", "8.zrg$vS_8", mockDate0, "8.zrg$vS_8", (Long) null, (Long) null, podcastStatus0, "8.zrg$vS_8");
      Long long0 = podcastEpisode0.getBytesDownloaded();
      assertNull(long0);
  }
}
