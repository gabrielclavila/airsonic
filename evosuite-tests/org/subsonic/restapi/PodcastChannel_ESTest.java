/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 11 00:36:54 GMT 2024
 */

package org.subsonic.restapi;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.subsonic.restapi.PodcastChannel;
import org.subsonic.restapi.PodcastEpisode;
import org.subsonic.restapi.PodcastStatus;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PodcastChannel_ESTest extends PodcastChannel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.setDescription(">m*6j23");
      assertNull(podcastChannel0.getUrl());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.url = "h_EMB4C%Ed-W\"";
      String string0 = podcastChannel0.getUrl();
      assertEquals("h_EMB4C%Ed-W\"", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.url = "";
      String string0 = podcastChannel0.getUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.title = "VIDEO";
      String string0 = podcastChannel0.getTitle();
      assertEquals("VIDEO", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.setTitle("");
      String string0 = podcastChannel0.getTitle();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      PodcastStatus podcastStatus0 = PodcastStatus.SKIPPED;
      podcastChannel0.setStatus(podcastStatus0);
      PodcastStatus podcastStatus1 = podcastChannel0.getStatus();
      assertSame(podcastStatus1, podcastStatus0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.setOriginalImageUrl("VqW 9up*o");
      String string0 = podcastChannel0.getOriginalImageUrl();
      assertEquals("VqW 9up*o", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.setOriginalImageUrl("");
      String string0 = podcastChannel0.getOriginalImageUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.setId(";e");
      String string0 = podcastChannel0.getId();
      assertEquals(";e", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.id = "";
      String string0 = podcastChannel0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.errorMessage = "nP^8C1c";
      String string0 = podcastChannel0.getErrorMessage();
      assertEquals("nP^8C1c", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.errorMessage = "";
      String string0 = podcastChannel0.getErrorMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      LinkedList<PodcastEpisode> linkedList0 = new LinkedList<PodcastEpisode>();
      podcastChannel0.episode = (List<PodcastEpisode>) linkedList0;
      PodcastEpisode podcastEpisode0 = new PodcastEpisode();
      linkedList0.add(podcastEpisode0);
      List<PodcastEpisode> list0 = podcastChannel0.getEpisode();
      assertTrue(list0.contains(podcastEpisode0));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.description = "VIDEO";
      String string0 = podcastChannel0.getDescription();
      assertEquals("VIDEO", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.description = "";
      String string0 = podcastChannel0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.setCoverArt("2c]0");
      String string0 = podcastChannel0.getCoverArt();
      assertEquals("2c]0", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.setCoverArt("");
      String string0 = podcastChannel0.getCoverArt();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.getEpisode();
      List<PodcastEpisode> list0 = podcastChannel0.getEpisode();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      String string0 = podcastChannel0.getOriginalImageUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      String string0 = podcastChannel0.getErrorMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      String string0 = podcastChannel0.getCoverArt();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.setUrl("[ZPd2G");
      assertNull(podcastChannel0.getTitle());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      String string0 = podcastChannel0.getTitle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.setErrorMessage("[ZPd2G");
      assertNull(podcastChannel0.getId());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      String string0 = podcastChannel0.getUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      podcastChannel0.getStatus();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      String string0 = podcastChannel0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PodcastChannel podcastChannel0 = new PodcastChannel();
      String string0 = podcastChannel0.getId();
      assertNull(string0);
  }
}
