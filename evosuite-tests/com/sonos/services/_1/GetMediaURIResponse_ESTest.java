/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 12 01:19:22 GMT 2024
 */

package com.sonos.services._1;

import org.junit.Test;
import static org.junit.Assert.*;
import com.sonos.services._1.EncryptionContext;
import com.sonos.services._1.GetMediaURIResponse;
import com.sonos.services._1.HttpHeaders;
import com.sonos.services._1.PositionInformation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GetMediaURIResponse_ESTest extends GetMediaURIResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      Integer integer0 = new Integer(67);
      getMediaURIResponse0.setUriTimeout(integer0);
      assertNull(getMediaURIResponse0.getPrivateDataFieldName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      Integer integer0 = new Integer((-2023));
      getMediaURIResponse0.uriTimeout = integer0;
      Integer integer1 = getMediaURIResponse0.getUriTimeout();
      assertEquals((-2023), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      Integer integer0 = new Integer(0);
      getMediaURIResponse0.uriTimeout = integer0;
      Integer integer1 = getMediaURIResponse0.getUriTimeout();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      Integer integer0 = new Integer(1);
      getMediaURIResponse0.uriTimeout = integer0;
      Integer integer1 = getMediaURIResponse0.getUriTimeout();
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      Integer integer0 = new Integer(5518);
      getMediaURIResponse0.uriTimeout = integer0;
      Integer integer1 = getMediaURIResponse0.getUriTimeout();
      assertEquals(5518, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      getMediaURIResponse0.setPrivateDataFieldName("com.sonos.services._1.EncryptionType");
      String string0 = getMediaURIResponse0.getPrivateDataFieldName();
      assertEquals("com.sonos.services._1.EncryptionType", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      getMediaURIResponse0.setPrivateDataFieldName("");
      String string0 = getMediaURIResponse0.getPrivateDataFieldName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      PositionInformation positionInformation0 = new PositionInformation();
      positionInformation0.setOffsetMillis(1);
      getMediaURIResponse0.setPositionInformation(positionInformation0);
      PositionInformation positionInformation1 = getMediaURIResponse0.getPositionInformation();
      assertSame(positionInformation1, positionInformation0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      PositionInformation positionInformation0 = new PositionInformation();
      positionInformation0.setOffsetMillis((-1));
      getMediaURIResponse0.positionInformation = positionInformation0;
      PositionInformation positionInformation1 = getMediaURIResponse0.getPositionInformation();
      assertEquals((-1), positionInformation1.getOffsetMillis());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      PositionInformation positionInformation0 = new PositionInformation();
      getMediaURIResponse0.positionInformation = positionInformation0;
      PositionInformation positionInformation1 = getMediaURIResponse0.getPositionInformation();
      assertEquals(0, positionInformation1.getIndex());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      PositionInformation positionInformation0 = new PositionInformation();
      positionInformation0.index = 1;
      getMediaURIResponse0.setPositionInformation(positionInformation0);
      PositionInformation positionInformation1 = getMediaURIResponse0.getPositionInformation();
      assertEquals(0, positionInformation1.getOffsetMillis());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      PositionInformation positionInformation0 = new PositionInformation();
      positionInformation0.setIndex((-1));
      getMediaURIResponse0.positionInformation = positionInformation0;
      PositionInformation positionInformation1 = getMediaURIResponse0.getPositionInformation();
      assertSame(positionInformation1, positionInformation0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      HttpHeaders httpHeaders0 = new HttpHeaders();
      getMediaURIResponse0.setHttpHeaders(httpHeaders0);
      HttpHeaders httpHeaders1 = getMediaURIResponse0.getHttpHeaders();
      assertSame(httpHeaders1, httpHeaders0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      getMediaURIResponse0.getMediaURIResult = null;
      getMediaURIResponse0.getMediaURIResult = "com.sonos.services._1.EncryptionType";
      String string0 = getMediaURIResponse0.getGetMediaURIResult();
      assertEquals("com.sonos.services._1.EncryptionType", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      getMediaURIResponse0.getMediaURIResult = null;
      getMediaURIResponse0.getMediaURIResult = "";
      String string0 = getMediaURIResponse0.getGetMediaURIResult();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      getMediaURIResponse0.deviceSessionToken = "e}{a#";
      String string0 = getMediaURIResponse0.getDeviceSessionToken();
      assertEquals("e}{a#", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      EncryptionContext encryptionContext0 = new EncryptionContext();
      getMediaURIResponse0.setDeviceSessionKey(encryptionContext0);
      EncryptionContext encryptionContext1 = getMediaURIResponse0.getDeviceSessionKey();
      assertNull(encryptionContext1.getValue());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      EncryptionContext encryptionContext0 = new EncryptionContext();
      getMediaURIResponse0.setContentKey(encryptionContext0);
      EncryptionContext encryptionContext1 = getMediaURIResponse0.getContentKey();
      assertNull(encryptionContext1.getValue());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      getMediaURIResponse0.setGetMediaURIResult("N");
      assertNull(getMediaURIResponse0.getPrivateDataFieldName());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      PositionInformation positionInformation0 = getMediaURIResponse0.getPositionInformation();
      assertNull(positionInformation0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      String string0 = getMediaURIResponse0.getDeviceSessionToken();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      String string0 = getMediaURIResponse0.getPrivateDataFieldName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      Integer integer0 = getMediaURIResponse0.getUriTimeout();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      EncryptionContext encryptionContext0 = getMediaURIResponse0.getContentKey();
      assertNull(encryptionContext0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      HttpHeaders httpHeaders0 = getMediaURIResponse0.getHttpHeaders();
      assertNull(httpHeaders0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      String string0 = getMediaURIResponse0.getGetMediaURIResult();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      getMediaURIResponse0.setDeviceSessionToken("");
      String string0 = getMediaURIResponse0.getDeviceSessionToken();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      EncryptionContext encryptionContext0 = getMediaURIResponse0.getDeviceSessionKey();
      assertNull(encryptionContext0);
  }
}
