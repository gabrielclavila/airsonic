/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 21:15:11 GMT 2024
 */

package org.airsonic.player.command;

import org.junit.Test;
import static org.junit.Assert.*;
import org.airsonic.player.command.DatabaseSettingsCommand;
import org.airsonic.player.spring.DataSourceConfigType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DatabaseSettingsCommand_ESTest extends DatabaseSettingsCommand_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DatabaseSettingsCommand databaseSettingsCommand0 = new DatabaseSettingsCommand();
      databaseSettingsCommand0.setUsertableQuote("`4MyGI5*%l");
      String string0 = databaseSettingsCommand0.getUsertableQuote();
      assertEquals("`4MyGI5*%l", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DatabaseSettingsCommand databaseSettingsCommand0 = new DatabaseSettingsCommand();
      databaseSettingsCommand0.setUsertableQuote("");
      String string0 = databaseSettingsCommand0.getUsertableQuote();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DatabaseSettingsCommand databaseSettingsCommand0 = new DatabaseSettingsCommand();
      databaseSettingsCommand0.setMysqlVarcharMaxlength(4);
      int int0 = databaseSettingsCommand0.getMysqlVarcharMaxlength();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DatabaseSettingsCommand databaseSettingsCommand0 = new DatabaseSettingsCommand();
      databaseSettingsCommand0.setMysqlVarcharMaxlength((-736));
      int int0 = databaseSettingsCommand0.getMysqlVarcharMaxlength();
      assertEquals((-736), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DatabaseSettingsCommand databaseSettingsCommand0 = new DatabaseSettingsCommand();
      databaseSettingsCommand0.setJNDIName("org.airsonic.player.command.DatabaseSettingsCommand");
      String string0 = databaseSettingsCommand0.getJNDIName();
      assertEquals("org.airsonic.player.command.DatabaseSettingsCommand", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DatabaseSettingsCommand databaseSettingsCommand0 = new DatabaseSettingsCommand();
      databaseSettingsCommand0.setJNDIName("");
      String string0 = databaseSettingsCommand0.getJNDIName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DatabaseSettingsCommand databaseSettingsCommand0 = new DatabaseSettingsCommand();
      databaseSettingsCommand0.setEmbedUsername("@[tS");
      String string0 = databaseSettingsCommand0.getEmbedUsername();
      assertEquals("@[tS", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DatabaseSettingsCommand databaseSettingsCommand0 = new DatabaseSettingsCommand();
      databaseSettingsCommand0.setEmbedUsername("");
      String string0 = databaseSettingsCommand0.getEmbedUsername();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DatabaseSettingsCommand databaseSettingsCommand0 = new DatabaseSettingsCommand();
      databaseSettingsCommand0.setEmbedUrl("EMBED");
      String string0 = databaseSettingsCommand0.getEmbedUrl();
      assertEquals("EMBED", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DatabaseSettingsCommand databaseSettingsCommand0 = new DatabaseSettingsCommand();
      databaseSettingsCommand0.setEmbedPassword("org.airsonic.player.spring.DataSourceConfigType");
      String string0 = databaseSettingsCommand0.getEmbedPassword();
      assertEquals("org.airsonic.player.spring.DataSourceConfigType", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DatabaseSettingsCommand databaseSettingsCommand0 = new DatabaseSettingsCommand();
      databaseSettingsCommand0.setEmbedPassword("");
      String string0 = databaseSettingsCommand0.getEmbedPassword();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DatabaseSettingsCommand databaseSettingsCommand0 = new DatabaseSettingsCommand();
      databaseSettingsCommand0.setEmbedDriver("org.airsonic.player.spring.DataSourceConfigType");
      String string0 = databaseSettingsCommand0.getEmbedDriver();
      assertEquals("org.airsonic.player.spring.DataSourceConfigType", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DatabaseSettingsCommand databaseSettingsCommand0 = new DatabaseSettingsCommand();
      databaseSettingsCommand0.setEmbedDriver("");
      String string0 = databaseSettingsCommand0.getEmbedDriver();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DatabaseSettingsCommand databaseSettingsCommand0 = new DatabaseSettingsCommand();
      DataSourceConfigType dataSourceConfigType0 = DataSourceConfigType.JNDI;
      databaseSettingsCommand0.setConfigType(dataSourceConfigType0);
      DataSourceConfigType dataSourceConfigType1 = databaseSettingsCommand0.getConfigType();
      assertEquals(DataSourceConfigType.JNDI, dataSourceConfigType1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DatabaseSettingsCommand databaseSettingsCommand0 = new DatabaseSettingsCommand();
      String string0 = databaseSettingsCommand0.getJNDIName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DatabaseSettingsCommand databaseSettingsCommand0 = new DatabaseSettingsCommand();
      String string0 = databaseSettingsCommand0.getEmbedUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DatabaseSettingsCommand databaseSettingsCommand0 = new DatabaseSettingsCommand();
      String string0 = databaseSettingsCommand0.getEmbedDriver();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DatabaseSettingsCommand databaseSettingsCommand0 = new DatabaseSettingsCommand();
      String string0 = databaseSettingsCommand0.getEmbedUsername();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DatabaseSettingsCommand databaseSettingsCommand0 = new DatabaseSettingsCommand();
      databaseSettingsCommand0.getConfigType();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DatabaseSettingsCommand databaseSettingsCommand0 = new DatabaseSettingsCommand();
      String string0 = databaseSettingsCommand0.getEmbedPassword();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DatabaseSettingsCommand databaseSettingsCommand0 = new DatabaseSettingsCommand();
      int int0 = databaseSettingsCommand0.getMysqlVarcharMaxlength();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DatabaseSettingsCommand databaseSettingsCommand0 = new DatabaseSettingsCommand();
      String string0 = databaseSettingsCommand0.getUsertableQuote();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DatabaseSettingsCommand databaseSettingsCommand0 = new DatabaseSettingsCommand();
      databaseSettingsCommand0.setEmbedUrl("");
      String string0 = databaseSettingsCommand0.getEmbedUrl();
      assertEquals("", string0);
  }
}
