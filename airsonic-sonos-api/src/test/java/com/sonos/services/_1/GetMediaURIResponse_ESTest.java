/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 14:28:47 GMT 2024
 */

package com.sonos.services._1;

import org.junit.Test;
import static org.junit.Assert.*;
import com.sonos.services._1.EncryptionContext;
import com.sonos.services._1.GetMediaURIResponse;
import com.sonos.services._1.HttpHeaders;
import com.sonos.services._1.PositionInformation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GetMediaURIResponse_ESTest extends GetMediaURIResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      EncryptionContext encryptionContext0 = new EncryptionContext();
      getMediaURIResponse0.setContentKey(encryptionContext0);
      assertNull(getMediaURIResponse0.getDeviceSessionToken());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      EncryptionContext encryptionContext0 = new EncryptionContext();
      getMediaURIResponse0.setDeviceSessionKey(encryptionContext0);
      assertNull(getMediaURIResponse0.getGetMediaURIResult());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      Integer integer0 = new Integer(1383);
      getMediaURIResponse0.setUriTimeout(integer0);
      Integer integer1 = getMediaURIResponse0.getUriTimeout();
      assertEquals(1383, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      Integer integer0 = new Integer(0);
      getMediaURIResponse0.uriTimeout = integer0;
      Integer integer1 = getMediaURIResponse0.getUriTimeout();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      Integer integer0 = new Integer((-1276));
      getMediaURIResponse0.setUriTimeout(integer0);
      Integer integer1 = getMediaURIResponse0.getUriTimeout();
      assertEquals((-1276), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      Integer integer0 = new Integer((-1));
      getMediaURIResponse0.setUriTimeout(integer0);
      Integer integer1 = getMediaURIResponse0.getUriTimeout();
      assertEquals((-1), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      getMediaURIResponse0.setPrivateDataFieldName("Ei<9#3}NOXGZ");
      String string0 = getMediaURIResponse0.getPrivateDataFieldName();
      assertEquals("Ei<9#3}NOXGZ", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      PositionInformation positionInformation0 = new PositionInformation();
      getMediaURIResponse0.positionInformation = positionInformation0;
      positionInformation0.setOffsetMillis(1908);
      PositionInformation positionInformation1 = getMediaURIResponse0.getPositionInformation();
      assertNull(positionInformation1.getId());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      PositionInformation positionInformation0 = new PositionInformation();
      positionInformation0.setOffsetMillis((-1));
      getMediaURIResponse0.setPositionInformation(positionInformation0);
      PositionInformation positionInformation1 = getMediaURIResponse0.getPositionInformation();
      assertSame(positionInformation1, positionInformation0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      PositionInformation positionInformation0 = new PositionInformation();
      getMediaURIResponse0.setPositionInformation(positionInformation0);
      PositionInformation positionInformation1 = getMediaURIResponse0.getPositionInformation();
      assertEquals(0, positionInformation1.getOffsetMillis());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      PositionInformation positionInformation0 = new PositionInformation();
      getMediaURIResponse0.setPositionInformation(positionInformation0);
      positionInformation0.setIndex(3);
      PositionInformation positionInformation1 = getMediaURIResponse0.getPositionInformation();
      assertEquals(3, positionInformation1.getIndex());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      PositionInformation positionInformation0 = new PositionInformation();
      positionInformation0.setIndex((-1199));
      getMediaURIResponse0.positionInformation = positionInformation0;
      PositionInformation positionInformation1 = getMediaURIResponse0.getPositionInformation();
      assertNull(positionInformation1.getId());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      getMediaURIResponse0.setGetMediaURIResult("");
      String string0 = getMediaURIResponse0.getGetMediaURIResult();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      getMediaURIResponse0.deviceSessionToken = ",)-bld3gXs6";
      String string0 = getMediaURIResponse0.getDeviceSessionToken();
      assertEquals(",)-bld3gXs6", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      getMediaURIResponse0.setDeviceSessionToken("");
      String string0 = getMediaURIResponse0.getDeviceSessionToken();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      EncryptionContext encryptionContext0 = new EncryptionContext();
      getMediaURIResponse0.deviceSessionKey = encryptionContext0;
      EncryptionContext encryptionContext1 = getMediaURIResponse0.getDeviceSessionKey();
      assertSame(encryptionContext1, encryptionContext0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      EncryptionContext encryptionContext0 = new EncryptionContext();
      getMediaURIResponse0.contentKey = encryptionContext0;
      EncryptionContext encryptionContext1 = getMediaURIResponse0.getContentKey();
      assertNull(encryptionContext1.getType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      HttpHeaders httpHeaders0 = new HttpHeaders();
      getMediaURIResponse0.setHttpHeaders(httpHeaders0);
      HttpHeaders httpHeaders1 = getMediaURIResponse0.getHttpHeaders();
      assertSame(httpHeaders1, httpHeaders0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      getMediaURIResponse0.setGetMediaURIResult("Ei<9#3}NOXGZ");
      String string0 = getMediaURIResponse0.getGetMediaURIResult();
      assertEquals("Ei<9#3}NOXGZ", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      getMediaURIResponse0.setPrivateDataFieldName("");
      String string0 = getMediaURIResponse0.getPrivateDataFieldName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      PositionInformation positionInformation0 = getMediaURIResponse0.getPositionInformation();
      assertNull(positionInformation0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      String string0 = getMediaURIResponse0.getDeviceSessionToken();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      String string0 = getMediaURIResponse0.getPrivateDataFieldName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      Integer integer0 = getMediaURIResponse0.getUriTimeout();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      EncryptionContext encryptionContext0 = getMediaURIResponse0.getContentKey();
      assertNull(encryptionContext0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      HttpHeaders httpHeaders0 = getMediaURIResponse0.getHttpHeaders();
      assertNull(httpHeaders0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      String string0 = getMediaURIResponse0.getGetMediaURIResult();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      GetMediaURIResponse getMediaURIResponse0 = new GetMediaURIResponse();
      EncryptionContext encryptionContext0 = getMediaURIResponse0.getDeviceSessionKey();
      assertNull(encryptionContext0);
  }
}
