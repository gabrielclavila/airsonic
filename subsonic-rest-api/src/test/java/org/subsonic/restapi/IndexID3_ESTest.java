/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 15:10:41 GMT 2024
 */

package org.subsonic.restapi;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.subsonic.restapi.ArtistID3;
import org.subsonic.restapi.IndexID3;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IndexID3_ESTest extends IndexID3_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IndexID3 indexID3_0 = new IndexID3();
      indexID3_0.setName("org.subsonic.restapi.IndexID3");
      String string0 = indexID3_0.getName();
      assertEquals("org.subsonic.restapi.IndexID3", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IndexID3 indexID3_0 = new IndexID3();
      indexID3_0.setName("");
      String string0 = indexID3_0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IndexID3 indexID3_0 = new IndexID3();
      LinkedList<ArtistID3> linkedList0 = new LinkedList<ArtistID3>();
      indexID3_0.artist = (List<ArtistID3>) linkedList0;
      linkedList0.add((ArtistID3) null);
      List<ArtistID3> list0 = indexID3_0.getArtist();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IndexID3 indexID3_0 = new IndexID3();
      List<ArtistID3> list0 = indexID3_0.getArtist();
      List<ArtistID3> list1 = indexID3_0.getArtist();
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IndexID3 indexID3_0 = new IndexID3();
      String string0 = indexID3_0.getName();
      assertNull(string0);
  }
}
