/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 06 20:41:08 GMT 2024
 */

package org.airsonic.player.service.metadata;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.airsonic.player.domain.MediaFile;
import org.airsonic.player.service.SettingsService;
import org.airsonic.player.service.metadata.DefaultMetaDataParser;
import org.airsonic.player.service.metadata.MetaData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MetaDataParser_ESTest extends MetaDataParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultMetaDataParser defaultMetaDataParser0 = new DefaultMetaDataParser((SettingsService) null);
      MediaFile mediaFile0 = new MediaFile();
      MetaData metaData0 = new MetaData();
      defaultMetaDataParser0.setMetaData(mediaFile0, metaData0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultMetaDataParser defaultMetaDataParser0 = new DefaultMetaDataParser((SettingsService) null);
      Integer integer0 = new Integer((-3023));
      String string0 = defaultMetaDataParser0.removeTrackNumberFromTitle("", integer0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultMetaDataParser defaultMetaDataParser0 = new DefaultMetaDataParser((SettingsService) null);
      boolean boolean0 = defaultMetaDataParser0.isEditingSupported();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultMetaDataParser defaultMetaDataParser0 = new DefaultMetaDataParser((SettingsService) null);
      MockFile mockFile0 = new MockFile("zSe*");
      boolean boolean0 = defaultMetaDataParser0.isApplicable(mockFile0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultMetaDataParser defaultMetaDataParser0 = new DefaultMetaDataParser((SettingsService) null);
      MockFile mockFile0 = new MockFile(" - ");
      boolean boolean0 = mockFile0.mkdirs();
      boolean boolean1 = defaultMetaDataParser0.isApplicable(mockFile0);
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultMetaDataParser defaultMetaDataParser0 = new DefaultMetaDataParser((SettingsService) null);
      Integer integer0 = new Integer(34);
      // Undeclared exception!
      try { 
        defaultMetaDataParser0.removeTrackNumberFromTitle((String) null, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.airsonic.player.service.metadata.MetaDataParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultMetaDataParser defaultMetaDataParser0 = new DefaultMetaDataParser((SettingsService) null);
      // Undeclared exception!
      try { 
        defaultMetaDataParser0.isApplicable((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.airsonic.player.service.metadata.DefaultMetaDataParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultMetaDataParser defaultMetaDataParser0 = new DefaultMetaDataParser((SettingsService) null);
      File file0 = MockFile.createTempFile("org.airsonic.player.service.metadata.MetaDataParser", "org.airsonic.player.service.metadata.MetaDataParser");
      // Undeclared exception!
      try { 
        defaultMetaDataParser0.guessTitle(file0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/io/FilenameUtils
         //
         verifyException("org.airsonic.player.service.metadata.MetaDataParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultMetaDataParser defaultMetaDataParser0 = new DefaultMetaDataParser((SettingsService) null);
      MockFile mockFile0 = new MockFile("[&c)FN~5jU+]m", "-*:gbxp*7?s;");
      // Undeclared exception!
      try { 
        defaultMetaDataParser0.guessArtist(mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.airsonic.player.service.metadata.MetaDataParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultMetaDataParser defaultMetaDataParser0 = new DefaultMetaDataParser((SettingsService) null);
      MockFile mockFile0 = new MockFile("-( ", "-( ");
      // Undeclared exception!
      try { 
        defaultMetaDataParser0.guessAlbum(mockFile0, "-(");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.airsonic.player.service.metadata.MetaDataParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultMetaDataParser defaultMetaDataParser0 = new DefaultMetaDataParser((SettingsService) null);
      MockFile mockFile0 = new MockFile(" - ", ",h>3L");
      // Undeclared exception!
      try { 
        defaultMetaDataParser0.getRawMetaData(mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.airsonic.player.service.metadata.MetaDataParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultMetaDataParser defaultMetaDataParser0 = new DefaultMetaDataParser((SettingsService) null);
      MockFile mockFile0 = new MockFile(" - ");
      // Undeclared exception!
      try { 
        defaultMetaDataParser0.getMetaData(mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.airsonic.player.service.metadata.MetaDataParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultMetaDataParser defaultMetaDataParser0 = new DefaultMetaDataParser((SettingsService) null);
      Integer integer0 = new Integer(0);
      String string0 = defaultMetaDataParser0.removeTrackNumberFromTitle("-( ", integer0);
      assertEquals("-(", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultMetaDataParser defaultMetaDataParser0 = new DefaultMetaDataParser((SettingsService) null);
      String string0 = defaultMetaDataParser0.removeTrackNumberFromTitle("-N0s9Z", (Integer) null);
      assertEquals("-N0s9Z", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultMetaDataParser defaultMetaDataParser0 = new DefaultMetaDataParser((SettingsService) null);
      // Undeclared exception!
      try { 
        defaultMetaDataParser0.guessTitle((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.airsonic.player.service.metadata.MetaDataParser", e);
      }
  }
}
