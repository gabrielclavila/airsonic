/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 15:49:57 GMT 2024
 */

package org.subsonic.restapi;

import org.junit.Test;
import static org.junit.Assert.*;
import javax.xml.bind.JAXBElement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.subsonic.restapi.AlbumID3;
import org.subsonic.restapi.AlbumInfo;
import org.subsonic.restapi.AlbumList;
import org.subsonic.restapi.AlbumList2;
import org.subsonic.restapi.AlbumWithSongsID3;
import org.subsonic.restapi.Artist;
import org.subsonic.restapi.ArtistID3;
import org.subsonic.restapi.ArtistInfo;
import org.subsonic.restapi.ArtistInfo2;
import org.subsonic.restapi.ArtistInfoBase;
import org.subsonic.restapi.ArtistWithAlbumsID3;
import org.subsonic.restapi.ArtistsID3;
import org.subsonic.restapi.AudioTrack;
import org.subsonic.restapi.Bookmark;
import org.subsonic.restapi.Bookmarks;
import org.subsonic.restapi.Captions;
import org.subsonic.restapi.ChatMessage;
import org.subsonic.restapi.ChatMessages;
import org.subsonic.restapi.Child;
import org.subsonic.restapi.Directory;
import org.subsonic.restapi.Error;
import org.subsonic.restapi.Genre;
import org.subsonic.restapi.Genres;
import org.subsonic.restapi.Index;
import org.subsonic.restapi.IndexID3;
import org.subsonic.restapi.Indexes;
import org.subsonic.restapi.InternetRadioStation;
import org.subsonic.restapi.InternetRadioStations;
import org.subsonic.restapi.JukeboxPlaylist;
import org.subsonic.restapi.JukeboxStatus;
import org.subsonic.restapi.License;
import org.subsonic.restapi.Lyrics;
import org.subsonic.restapi.MusicFolder;
import org.subsonic.restapi.MusicFolders;
import org.subsonic.restapi.NewestPodcasts;
import org.subsonic.restapi.NowPlaying;
import org.subsonic.restapi.NowPlayingEntry;
import org.subsonic.restapi.ObjectFactory;
import org.subsonic.restapi.PlayQueue;
import org.subsonic.restapi.Playlist;
import org.subsonic.restapi.PlaylistWithSongs;
import org.subsonic.restapi.Playlists;
import org.subsonic.restapi.PodcastChannel;
import org.subsonic.restapi.PodcastEpisode;
import org.subsonic.restapi.Podcasts;
import org.subsonic.restapi.Response;
import org.subsonic.restapi.ScanStatus;
import org.subsonic.restapi.SearchResult;
import org.subsonic.restapi.SearchResult2;
import org.subsonic.restapi.SearchResult3;
import org.subsonic.restapi.Share;
import org.subsonic.restapi.Shares;
import org.subsonic.restapi.SimilarSongs;
import org.subsonic.restapi.SimilarSongs2;
import org.subsonic.restapi.Songs;
import org.subsonic.restapi.Starred;
import org.subsonic.restapi.Starred2;
import org.subsonic.restapi.TopSongs;
import org.subsonic.restapi.User;
import org.subsonic.restapi.Users;
import org.subsonic.restapi.VideoConversion;
import org.subsonic.restapi.VideoInfo;
import org.subsonic.restapi.Videos;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ObjectFactory_ESTest extends ObjectFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      ArtistsID3 artistsID3_0 = objectFactory0.createArtistsID3();
      assertNull(artistsID3_0.getIgnoredArticles());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      JukeboxStatus jukeboxStatus0 = objectFactory0.createJukeboxStatus();
      assertEquals(0, jukeboxStatus0.getCurrentIndex());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      MusicFolder musicFolder0 = objectFactory0.createMusicFolder();
      assertNull(musicFolder0.getName());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      MusicFolders musicFolders0 = objectFactory0.createMusicFolders();
      assertNotNull(musicFolders0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Genre genre0 = objectFactory0.createGenre();
      assertEquals(0, genre0.getSongCount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Lyrics lyrics0 = objectFactory0.createLyrics();
      assertNull(lyrics0.getContent());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Indexes indexes0 = objectFactory0.createIndexes();
      assertNull(indexes0.getIgnoredArticles());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Playlists playlists0 = objectFactory0.createPlaylists();
      assertNotNull(playlists0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      SearchResult3 searchResult3_0 = objectFactory0.createSearchResult3();
      assertNotNull(searchResult3_0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      ScanStatus scanStatus0 = objectFactory0.createScanStatus();
      assertNull(scanStatus0.getCount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      NowPlayingEntry nowPlayingEntry0 = objectFactory0.createNowPlayingEntry();
      assertNull(nowPlayingEntry0.getTitle());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Directory directory0 = objectFactory0.createDirectory();
      assertNull(directory0.getId());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Videos videos0 = objectFactory0.createVideos();
      assertNotNull(videos0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      ChatMessage chatMessage0 = objectFactory0.createChatMessage();
      assertEquals(0L, chatMessage0.getTime());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      AlbumWithSongsID3 albumWithSongsID3_0 = objectFactory0.createAlbumWithSongsID3();
      assertNull(albumWithSongsID3_0.getPlayCount());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      AlbumID3 albumID3_0 = objectFactory0.createAlbumID3();
      assertNull(albumID3_0.getGenre());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Artist artist0 = objectFactory0.createArtist();
      assertNull(artist0.getAverageRating());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      NowPlaying nowPlaying0 = objectFactory0.createNowPlaying();
      assertNotNull(nowPlaying0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      InternetRadioStation internetRadioStation0 = objectFactory0.createInternetRadioStation();
      assertNull(internetRadioStation0.getHomePageUrl());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      AlbumList albumList0 = objectFactory0.createAlbumList();
      assertNotNull(albumList0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Response response0 = objectFactory0.createResponse();
      JAXBElement<Response> jAXBElement0 = objectFactory0.createSubsonicResponse(response0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Starred starred0 = objectFactory0.createStarred();
      assertNotNull(starred0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      SearchResult searchResult0 = objectFactory0.createSearchResult();
      assertEquals(0, searchResult0.getTotalHits());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      PlayQueue playQueue0 = objectFactory0.createPlayQueue();
      assertNull(playQueue0.getUsername());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Bookmarks bookmarks0 = objectFactory0.createBookmarks();
      assertNotNull(bookmarks0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      TopSongs topSongs0 = objectFactory0.createTopSongs();
      assertNotNull(topSongs0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Shares shares0 = objectFactory0.createShares();
      assertNotNull(shares0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      SimilarSongs similarSongs0 = objectFactory0.createSimilarSongs();
      assertNotNull(similarSongs0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      JukeboxPlaylist jukeboxPlaylist0 = objectFactory0.createJukeboxPlaylist();
      assertNull(jukeboxPlaylist0.getPosition());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      SearchResult2 searchResult2_0 = objectFactory0.createSearchResult2();
      assertNotNull(searchResult2_0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      NewestPodcasts newestPodcasts0 = objectFactory0.createNewestPodcasts();
      assertNotNull(newestPodcasts0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Captions captions0 = objectFactory0.createCaptions();
      assertNull(captions0.getName());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Child child0 = objectFactory0.createChild();
      assertNull(child0.getSuffix());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      ArtistInfoBase artistInfoBase0 = objectFactory0.createArtistInfoBase();
      assertNull(artistInfoBase0.getMusicBrainzId());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Share share0 = objectFactory0.createShare();
      assertNull(share0.getId());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      SimilarSongs2 similarSongs2_0 = objectFactory0.createSimilarSongs2();
      assertNotNull(similarSongs2_0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Starred2 starred2_0 = objectFactory0.createStarred2();
      assertNotNull(starred2_0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      ArtistInfo2 artistInfo2_0 = objectFactory0.createArtistInfo2();
      assertNull(artistInfo2_0.getLastFmUrl());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      License license0 = objectFactory0.createLicense();
      assertFalse(license0.isValid());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Users users0 = objectFactory0.createUsers();
      assertNotNull(users0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Error error0 = objectFactory0.createError();
      assertNull(error0.getMessage());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      ArtistID3 artistID3_0 = objectFactory0.createArtistID3();
      assertEquals(0, artistID3_0.getAlbumCount());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Playlist playlist0 = objectFactory0.createPlaylist();
      assertNull(playlist0.getCoverArt());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Podcasts podcasts0 = objectFactory0.createPodcasts();
      assertNotNull(podcasts0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      ArtistInfo artistInfo0 = objectFactory0.createArtistInfo();
      assertNull(artistInfo0.getSmallImageUrl());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      PodcastEpisode podcastEpisode0 = objectFactory0.createPodcastEpisode();
      assertNull(podcastEpisode0.getChannelId());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      VideoConversion videoConversion0 = objectFactory0.createVideoConversion();
      assertNull(videoConversion0.getAudioTrackId());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      AlbumList2 albumList2_0 = objectFactory0.createAlbumList2();
      assertNotNull(albumList2_0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Genres genres0 = objectFactory0.createGenres();
      assertNotNull(genres0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      AudioTrack audioTrack0 = objectFactory0.createAudioTrack();
      assertNull(audioTrack0.getId());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      User user0 = objectFactory0.createUser();
      assertFalse(user0.isStreamRole());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      IndexID3 indexID3_0 = objectFactory0.createIndexID3();
      assertNull(indexID3_0.getName());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      AlbumInfo albumInfo0 = objectFactory0.createAlbumInfo();
      assertNull(albumInfo0.getNotes());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Bookmark bookmark0 = objectFactory0.createBookmark();
      assertNull(bookmark0.getComment());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      ArtistWithAlbumsID3 artistWithAlbumsID3_0 = objectFactory0.createArtistWithAlbumsID3();
      assertNull(artistWithAlbumsID3_0.getId());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Index index0 = objectFactory0.createIndex();
      assertNull(index0.getName());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      InternetRadioStations internetRadioStations0 = objectFactory0.createInternetRadioStations();
      assertNotNull(internetRadioStations0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      PlaylistWithSongs playlistWithSongs0 = objectFactory0.createPlaylistWithSongs();
      assertNull(playlistWithSongs0.isPublic());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      Songs songs0 = objectFactory0.createSongs();
      assertNotNull(songs0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      VideoInfo videoInfo0 = objectFactory0.createVideoInfo();
      assertNull(videoInfo0.getId());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      PodcastChannel podcastChannel0 = objectFactory0.createPodcastChannel();
      assertNull(podcastChannel0.getId());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      ChatMessages chatMessages0 = objectFactory0.createChatMessages();
      assertNotNull(chatMessages0);
  }
}
