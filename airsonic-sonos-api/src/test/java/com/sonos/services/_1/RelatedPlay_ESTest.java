/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 14:32:44 GMT 2024
 */

package com.sonos.services._1;

import org.junit.Test;
import static org.junit.Assert.*;
import com.sonos.services._1.ItemType;
import com.sonos.services._1.RelatedPlay;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RelatedPlay_ESTest extends RelatedPlay_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RelatedPlay relatedPlay0 = new RelatedPlay();
      ItemType itemType0 = ItemType.AUDIOBOOK;
      relatedPlay0.setItemType(itemType0);
      assertNull(relatedPlay0.getId());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RelatedPlay relatedPlay0 = new RelatedPlay();
      Boolean boolean0 = new Boolean(true);
      relatedPlay0.setCanPlay(boolean0);
      Boolean boolean1 = relatedPlay0.isCanPlay();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RelatedPlay relatedPlay0 = new RelatedPlay();
      Boolean boolean0 = Boolean.valueOf("");
      relatedPlay0.setCanPlay(boolean0);
      Boolean boolean1 = relatedPlay0.isCanPlay();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RelatedPlay relatedPlay0 = new RelatedPlay();
      relatedPlay0.title = "streamList";
      String string0 = relatedPlay0.getTitle();
      assertEquals("streamList", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RelatedPlay relatedPlay0 = new RelatedPlay();
      ItemType itemType0 = ItemType.FAVORITE;
      relatedPlay0.itemType = itemType0;
      ItemType itemType1 = relatedPlay0.getItemType();
      assertEquals("favorite", itemType1.value());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RelatedPlay relatedPlay0 = new RelatedPlay();
      relatedPlay0.setId("program");
      String string0 = relatedPlay0.getId();
      assertEquals("program", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RelatedPlay relatedPlay0 = new RelatedPlay();
      relatedPlay0.setId("");
      String string0 = relatedPlay0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RelatedPlay relatedPlay0 = new RelatedPlay();
      String string0 = relatedPlay0.getTitle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RelatedPlay relatedPlay0 = new RelatedPlay();
      relatedPlay0.getItemType();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RelatedPlay relatedPlay0 = new RelatedPlay();
      Boolean boolean0 = relatedPlay0.isCanPlay();
      relatedPlay0.setCanPlay(boolean0);
      assertNull(relatedPlay0.isCanPlay());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RelatedPlay relatedPlay0 = new RelatedPlay();
      relatedPlay0.setTitle("");
      String string0 = relatedPlay0.getTitle();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RelatedPlay relatedPlay0 = new RelatedPlay();
      String string0 = relatedPlay0.getId();
      assertNull(string0);
  }
}
