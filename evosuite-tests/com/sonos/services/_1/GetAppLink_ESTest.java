/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 12 01:38:52 GMT 2024
 */

package com.sonos.services._1;

import org.junit.Test;
import static org.junit.Assert.*;
import com.sonos.services._1.GetAppLink;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GetAppLink_ESTest extends GetAppLink_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GetAppLink getAppLink0 = new GetAppLink();
      getAppLink0.setSonosAppName("RRgvr");
      String string0 = getAppLink0.getSonosAppName();
      assertEquals("RRgvr", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GetAppLink getAppLink0 = new GetAppLink();
      getAppLink0.setOsVersion(")|h?+-%.V+~");
      String string0 = getAppLink0.getOsVersion();
      assertEquals(")|h?+-%.V+~", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GetAppLink getAppLink0 = new GetAppLink();
      getAppLink0.osVersion = "";
      String string0 = getAppLink0.getOsVersion();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GetAppLink getAppLink0 = new GetAppLink();
      getAppLink0.setHouseholdId("z|nt");
      String string0 = getAppLink0.getHouseholdId();
      assertEquals("z|nt", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GetAppLink getAppLink0 = new GetAppLink();
      getAppLink0.householdId = null;
      getAppLink0.householdId = "";
      String string0 = getAppLink0.getHouseholdId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GetAppLink getAppLink0 = new GetAppLink();
      getAppLink0.setHardware("'}");
      String string0 = getAppLink0.getHardware();
      assertEquals("'}", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GetAppLink getAppLink0 = new GetAppLink();
      getAppLink0.setHardware("");
      String string0 = getAppLink0.getHardware();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GetAppLink getAppLink0 = new GetAppLink();
      getAppLink0.setCallbackPath("RRgvr");
      String string0 = getAppLink0.getCallbackPath();
      assertEquals("RRgvr", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GetAppLink getAppLink0 = new GetAppLink();
      getAppLink0.callbackPath = "";
      String string0 = getAppLink0.getCallbackPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GetAppLink getAppLink0 = new GetAppLink();
      String string0 = getAppLink0.getHardware();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GetAppLink getAppLink0 = new GetAppLink();
      getAppLink0.setSonosAppName("");
      String string0 = getAppLink0.getSonosAppName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GetAppLink getAppLink0 = new GetAppLink();
      String string0 = getAppLink0.getHouseholdId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GetAppLink getAppLink0 = new GetAppLink();
      String string0 = getAppLink0.getOsVersion();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GetAppLink getAppLink0 = new GetAppLink();
      String string0 = getAppLink0.getCallbackPath();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GetAppLink getAppLink0 = new GetAppLink();
      String string0 = getAppLink0.getSonosAppName();
      assertNull(string0);
  }
}
