/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 12 01:38:42 GMT 2024
 */

package com.sonos.services._1;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sonos.services._1.ItemType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ItemType_ESTest extends ItemType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ItemType itemType0 = ItemType.fromValue("playlist");
      assertEquals(ItemType.PLAYLIST, itemType0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ItemType[] itemTypeArray0 = ItemType.values();
      assertEquals(19, itemTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ItemType itemType0 = ItemType.valueOf("TRACK");
      assertEquals("track", itemType0.value());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ItemType itemType0 = ItemType.fromValue("collection");
      assertEquals(ItemType.COLLECTION, itemType0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        ItemType.fromValue("cojlection");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cojlection
         //
         verifyException("com.sonos.services._1.ItemType", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ItemType itemType0 = ItemType.COLLECTION;
      String string0 = itemType0.value();
      assertEquals("collection", string0);
  }
}
