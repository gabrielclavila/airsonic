/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 11 00:20:34 GMT 2024
 */

package org.subsonic.restapi;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.subsonic.restapi.ArtistID3;
import org.subsonic.restapi.ArtistInfo2;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArtistInfo2_ESTest extends ArtistInfo2_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArtistInfo2 artistInfo2_0 = new ArtistInfo2();
      LinkedList<ArtistID3> linkedList0 = new LinkedList<ArtistID3>();
      ArtistID3 artistID3_0 = new ArtistID3();
      linkedList0.add(artistID3_0);
      artistInfo2_0.similarArtist = (List<ArtistID3>) linkedList0;
      List<ArtistID3> list0 = artistInfo2_0.getSimilarArtist();
      assertTrue(list0.contains(artistID3_0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ArtistInfo2 artistInfo2_0 = new ArtistInfo2();
      List<ArtistID3> list0 = artistInfo2_0.getSimilarArtist();
      List<ArtistID3> list1 = artistInfo2_0.getSimilarArtist();
      assertSame(list1, list0);
  }
}
