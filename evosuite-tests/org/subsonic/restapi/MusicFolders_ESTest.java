/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 11 00:32:29 GMT 2024
 */

package org.subsonic.restapi;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.subsonic.restapi.MusicFolder;
import org.subsonic.restapi.MusicFolders;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MusicFolders_ESTest extends MusicFolders_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MusicFolders musicFolders0 = new MusicFolders();
      LinkedList<MusicFolder> linkedList0 = new LinkedList<MusicFolder>();
      MusicFolder musicFolder0 = new MusicFolder();
      linkedList0.add(musicFolder0);
      musicFolders0.musicFolder = (List<MusicFolder>) linkedList0;
      List<MusicFolder> list0 = musicFolders0.getMusicFolder();
      assertTrue(list0.contains(musicFolder0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MusicFolders musicFolders0 = new MusicFolders();
      List<MusicFolder> list0 = musicFolders0.getMusicFolder();
      List<MusicFolder> list1 = musicFolders0.getMusicFolder();
      assertSame(list1, list0);
  }
}
