/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 12 01:45:08 GMT 2024
 */

package com.sonos.services._1_1;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sonos.services._1_1.Sonos;
import java.lang.reflect.Proxy;
import java.net.URL;
import java.net.URLStreamHandler;
import javax.xml.namespace.QName;
import javax.xml.ws.RespectBindingFeature;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Sonos_ESTest extends Sonos_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Sonos sonos0 = null;
      try {
        sonos0 = new Sonos((WebServiceFeature[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      URL uRL0 = Sonos.WSDL_LOCATION;
      Sonos sonos0 = null;
      try {
        sonos0 = new Sonos(uRL0, (WebServiceFeature[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      QName qName0 = QName.valueOf("69EJ0_X_GT/W");
      WebServiceFeature[] webServiceFeatureArray0 = new WebServiceFeature[7];
      Sonos sonos0 = null;
      try {
        sonos0 = new Sonos(uRL0, qName0, webServiceFeatureArray0);
        fail("Expecting exception: WebServiceException");
      
      } catch(WebServiceException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      QName qName0 = Sonos.SERVICE;
      Sonos sonos0 = null;
      try {
        sonos0 = new Sonos(uRL0, qName0, (WebServiceFeature[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL((URL) null, "file:/home/iartes/Downloads/airsonic-master/airsonic-sonos-api/src/main/resources/sonos-1.1.wsdl", uRLStreamHandler0);
      QName qName0 = new QName("", "");
      WebServiceFeature[] webServiceFeatureArray0 = new WebServiceFeature[0];
      Sonos sonos0 = null;
      try {
        sonos0 = new Sonos(uRL0, qName0, webServiceFeatureArray0);
        fail("Expecting exception: WebServiceException");
      
      } catch(WebServiceException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Sonos sonos0 = null;
      try {
        sonos0 = new Sonos((URL) null, (QName) null);
        fail("Expecting exception: WebServiceException");
      
      } catch(WebServiceException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      URL uRL0 = Sonos.WSDL_LOCATION;
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, "Can not initialize the default wsdl from {0}", uRLStreamHandler0);
      QName qName0 = Sonos.SERVICE;
      Sonos sonos0 = null;
      try {
        sonos0 = new Sonos(uRL1, qName0);
        fail("Expecting exception: WebServiceException");
      
      } catch(WebServiceException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockFile mockFile0 = new MockFile("WMuAB%", "WMuAB%");
      URL uRL0 = mockFile0.toURL();
      Sonos sonos0 = null;
      try {
        sonos0 = new Sonos(uRL0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("]aj@6V", "", 0, "]aj@6V", uRLStreamHandler0);
      Sonos sonos0 = null;
      try {
        sonos0 = new Sonos(uRL0);
        fail("Expecting exception: WebServiceException");
      
      } catch(WebServiceException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WebServiceFeature[] webServiceFeatureArray0 = new WebServiceFeature[0];
      Sonos sonos0 = new Sonos(webServiceFeatureArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      URL uRL0 = Sonos.WSDL_LOCATION;
      Sonos sonos0 = new Sonos(uRL0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      URL uRL0 = Sonos.WSDL_LOCATION;
      QName qName0 = Sonos.SERVICE;
      Sonos sonos0 = new Sonos(uRL0, qName0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      WebServiceFeature[] webServiceFeatureArray0 = new WebServiceFeature[0];
      Sonos sonos0 = new Sonos((URL) null, webServiceFeatureArray0);
      WebServiceFeature[] webServiceFeatureArray1 = new WebServiceFeature[3];
      RespectBindingFeature respectBindingFeature0 = new RespectBindingFeature(false);
      webServiceFeatureArray1[0] = (WebServiceFeature) respectBindingFeature0;
      webServiceFeatureArray1[1] = (WebServiceFeature) respectBindingFeature0;
      webServiceFeatureArray1[2] = (WebServiceFeature) respectBindingFeature0;
      Proxy proxy0 = (Proxy)sonos0.getSonosSoap(webServiceFeatureArray1);
      assertNotNull(proxy0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Sonos sonos0 = new Sonos();
      WebServiceFeature[] webServiceFeatureArray0 = new WebServiceFeature[4];
      // Undeclared exception!
      try { 
        sonos0.getSonosSoap(webServiceFeatureArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      QName qName0 = QName.valueOf("");
      URL uRL0 = mockFile0.toURL();
      WebServiceFeature[] webServiceFeatureArray0 = new WebServiceFeature[0];
      Sonos sonos0 = null;
      try {
        sonos0 = new Sonos(uRL0, qName0, webServiceFeatureArray0);
        fail("Expecting exception: WebServiceException");
      
      } catch(WebServiceException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      WebServiceFeature[] webServiceFeatureArray0 = new WebServiceFeature[2];
      Sonos sonos0 = null;
      try {
        sonos0 = new Sonos(uRL0, webServiceFeatureArray0);
        fail("Expecting exception: WebServiceException");
      
      } catch(WebServiceException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Sonos sonos0 = new Sonos();
      Proxy proxy0 = (Proxy)sonos0.getSonosSoap();
      assertNotNull(proxy0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockFile mockFile0 = new MockFile("EXPLICIT:SEEK");
      URL uRL0 = mockFile0.toURL();
      Sonos sonos0 = null;
      try {
        sonos0 = new Sonos(uRL0);
        fail("Expecting exception: WebServiceException");
      
      } catch(WebServiceException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      WebServiceFeature[] webServiceFeatureArray0 = new WebServiceFeature[7];
      Sonos sonos0 = null;
      try {
        sonos0 = new Sonos(webServiceFeatureArray0);
        fail("Expecting exception: WebServiceException");
      
      } catch(WebServiceException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      URL uRL0 = mockFile0.toURL();
      QName qName0 = QName.valueOf("");
      Sonos sonos0 = null;
      try {
        sonos0 = new Sonos(uRL0, qName0);
        fail("Expecting exception: WebServiceException");
      
      } catch(WebServiceException e) {
      }
  }
}
