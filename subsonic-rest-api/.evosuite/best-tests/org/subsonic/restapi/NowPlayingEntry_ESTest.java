/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 08 15:52:35 GMT 2024
 */

package org.subsonic.restapi;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.subsonic.restapi.NowPlayingEntry;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NowPlayingEntry_ESTest extends NowPlayingEntry_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NowPlayingEntry nowPlayingEntry0 = new NowPlayingEntry();
      nowPlayingEntry0.setUsername("$VALUES");
      String string0 = nowPlayingEntry0.getUsername();
      assertEquals("$VALUES", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NowPlayingEntry nowPlayingEntry0 = new NowPlayingEntry();
      nowPlayingEntry0.setUsername("");
      String string0 = nowPlayingEntry0.getUsername();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NowPlayingEntry nowPlayingEntry0 = new NowPlayingEntry();
      nowPlayingEntry0.setPlayerName("G\" BHvr\"");
      String string0 = nowPlayingEntry0.getPlayerName();
      assertEquals("G\" BHvr\"", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NowPlayingEntry nowPlayingEntry0 = new NowPlayingEntry();
      nowPlayingEntry0.setPlayerId((-352));
      int int0 = nowPlayingEntry0.getPlayerId();
      assertEquals((-352), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NowPlayingEntry nowPlayingEntry0 = new NowPlayingEntry();
      nowPlayingEntry0.minutesAgo = (-1487);
      int int0 = nowPlayingEntry0.getMinutesAgo();
      assertEquals((-1487), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NowPlayingEntry nowPlayingEntry0 = new NowPlayingEntry();
      nowPlayingEntry0.setPlayerName("");
      String string0 = nowPlayingEntry0.getPlayerName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NowPlayingEntry nowPlayingEntry0 = new NowPlayingEntry();
      nowPlayingEntry0.setMinutesAgo(2);
      int int0 = nowPlayingEntry0.getMinutesAgo();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NowPlayingEntry nowPlayingEntry0 = new NowPlayingEntry();
      String string0 = nowPlayingEntry0.getPlayerName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NowPlayingEntry nowPlayingEntry0 = new NowPlayingEntry();
      int int0 = nowPlayingEntry0.getMinutesAgo();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NowPlayingEntry nowPlayingEntry0 = new NowPlayingEntry();
      nowPlayingEntry0.setPlayerId(2);
      int int0 = nowPlayingEntry0.getPlayerId();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NowPlayingEntry nowPlayingEntry0 = new NowPlayingEntry();
      String string0 = nowPlayingEntry0.getUsername();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NowPlayingEntry nowPlayingEntry0 = new NowPlayingEntry();
      int int0 = nowPlayingEntry0.getPlayerId();
      assertEquals(0, int0);
  }
}
