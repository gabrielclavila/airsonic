/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 11 00:42:18 GMT 2024
 */

package org.subsonic.restapi;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.subsonic.restapi.VideoConversion;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VideoConversion_ESTest extends VideoConversion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VideoConversion videoConversion0 = new VideoConversion();
      videoConversion0.setId("org.subsonic.restapi.VideoConversion");
      String string0 = videoConversion0.getId();
      assertEquals("org.subsonic.restapi.VideoConversion", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VideoConversion videoConversion0 = new VideoConversion();
      Integer integer0 = new Integer(0);
      videoConversion0.bitRate = integer0;
      Integer integer1 = videoConversion0.getBitRate();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VideoConversion videoConversion0 = new VideoConversion();
      Integer integer0 = new Integer(1);
      videoConversion0.setBitRate(integer0);
      Integer integer1 = videoConversion0.getBitRate();
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VideoConversion videoConversion0 = new VideoConversion();
      Integer integer0 = new Integer((-3396));
      videoConversion0.setBitRate(integer0);
      Integer integer1 = videoConversion0.getBitRate();
      assertEquals((-3396), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VideoConversion videoConversion0 = new VideoConversion();
      Integer integer0 = new Integer(0);
      videoConversion0.setAudioTrackId(integer0);
      Integer integer1 = videoConversion0.getAudioTrackId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VideoConversion videoConversion0 = new VideoConversion();
      Integer integer0 = new Integer(1);
      videoConversion0.setAudioTrackId(integer0);
      Integer integer1 = videoConversion0.getAudioTrackId();
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VideoConversion videoConversion0 = new VideoConversion();
      Integer integer0 = new Integer((-1368));
      videoConversion0.audioTrackId = integer0;
      Integer integer1 = videoConversion0.getAudioTrackId();
      assertEquals((-1368), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VideoConversion videoConversion0 = new VideoConversion();
      String string0 = videoConversion0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VideoConversion videoConversion0 = new VideoConversion();
      Integer integer0 = videoConversion0.getAudioTrackId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VideoConversion videoConversion0 = new VideoConversion();
      Integer integer0 = videoConversion0.getBitRate();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VideoConversion videoConversion0 = new VideoConversion();
      videoConversion0.setId("");
      String string0 = videoConversion0.getId();
      assertEquals("", string0);
  }
}
